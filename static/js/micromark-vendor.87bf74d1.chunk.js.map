{"version":3,"sources":["../node_modules/micromark/dist/character/markdown-space.js","../node_modules/micromark/dist/util/chunked-splice.js","../node_modules/micromark/dist/character/markdown-line-ending-or-space.js","../node_modules/micromark/dist/util/regex-check.js","../node_modules/micromark/dist/util/shallow.js","../node_modules/micromark/dist/constant/assign.js","../node_modules/micromark/dist/util/prefix-size.js","../node_modules/micromark/dist/character/ascii-alphanumeric.js","../node_modules/micromark/dist/character/markdown-line-ending.js","../node_modules/micromark/dist/constant/from-char-code.js","../node_modules/micromark/dist/tokenize/partial-blank-line.js","../node_modules/micromark/dist/util/resolve-all.js","../node_modules/micromark/dist/character/ascii-alpha.js","../node_modules/micromark/dist/tokenize/factory-space.js","../node_modules/micromark/dist/util/normalize-identifier.js","../node_modules/micromark/dist/util/miniflat.js","../node_modules/micromark/dist/util/chunked-push.js","../node_modules/micromark/dist/character/unicode-punctuation.js","../node_modules/micromark/dist/character/unicode-whitespace.js","../node_modules/micromark/dist/character/ascii-control.js","../node_modules/micromark/dist/tokenize/label-end.js","../node_modules/micromark/dist/util/safe-from-int.js","../node_modules/micromark/dist/parse.js","../node_modules/micromark/dist/initialize/content.js","../node_modules/micromark/dist/initialize/document.js","../node_modules/micromark/dist/initialize/flow.js","../node_modules/micromark/dist/tokenize/content.js","../node_modules/micromark/dist/constant/splice.js","../node_modules/micromark/dist/util/create-tokenizer.js","../node_modules/micromark/dist/util/serialize-chunks.js","../node_modules/micromark/dist/util/slice-chunks.js","../node_modules/micromark/dist/constructs.js","../node_modules/micromark/dist/tokenize/attention.js","../node_modules/micromark/dist/constant/unicode-punctuation-regex.js","../node_modules/micromark/dist/util/move-point.js","../node_modules/micromark/dist/tokenize/autolink.js","../node_modules/micromark/dist/character/ascii-atext.js","../node_modules/micromark/dist/tokenize/block-quote.js","../node_modules/micromark/dist/tokenize/character-escape.js","../node_modules/micromark/dist/character/ascii-punctuation.js","../node_modules/micromark/dist/tokenize/character-reference.js","../node_modules/micromark/dist/character/ascii-hex-digit.js","../node_modules/micromark/dist/tokenize/code-fenced.js","../node_modules/micromark/dist/tokenize/code-indented.js","../node_modules/micromark/dist/tokenize/code-text.js","../node_modules/micromark/dist/tokenize/definition.js","../node_modules/micromark/dist/tokenize/hard-break-escape.js","../node_modules/micromark/dist/tokenize/heading-atx.js","../node_modules/micromark/dist/tokenize/html-flow.js","../node_modules/micromark/dist/constant/html-block-names.js","../node_modules/micromark/dist/constant/html-raw-names.js","../node_modules/micromark/dist/tokenize/html-text.js","../node_modules/micromark/dist/tokenize/label-start-image.js","../node_modules/micromark/dist/tokenize/label-start-link.js","../node_modules/micromark/dist/tokenize/line-ending.js","../node_modules/micromark/dist/tokenize/list.js","../node_modules/micromark/dist/tokenize/setext-underline.js","../node_modules/micromark/dist/preprocess.js","../node_modules/micromark/dist/postprocess.js","../node_modules/micromark/dist/constant/has-own-property.js","../node_modules/micromark/dist/util/size-chunks.js","../node_modules/micromark/dist/util/subtokenize.js","../node_modules/micromark/dist/initialize/text.js","../node_modules/micromark/dist/util/combine-extensions.js","../node_modules/micromark/dist/util/classify-character.js","../node_modules/micromark/dist/character/ascii-digit.js","../node_modules/micromark/dist/tokenize/factory-destination.js","../node_modules/micromark/dist/tokenize/factory-label.js","../node_modules/micromark/dist/tokenize/factory-whitespace.js","../node_modules/micromark/dist/tokenize/factory-title.js","../node_modules/micromark/dist/tokenize/thematic-break.js"],"names":["module","exports","code","splice","require","list","start","remove","items","parameters","end","length","chunkStart","Array","from","unshift","apply","slice","fromCharCode","regex","test","assign","object","Object","sizeChunks","events","type","tail","sliceStream","asciiAlphanumeric","regexCheck","String","markdownLineEnding","factorySpace","partialBlankLine","tokenize","effects","ok","nok","partial","constructs","context","resolve","called","index","resolveAll","indexOf","push","asciiAlpha","markdownSpace","max","limit","Infinity","size","enter","prefix","consume","exit","value","replace","toLowerCase","toUpperCase","undefined","chunkedSplice","unicodePunctuationRegex","unicodePunctuation","unicodeWhitespace","markdownLineEndingOrSpace","chunkedPush","normalizeIdentifier","shallow","factoryDestination","factoryLabel","factoryTitle","factoryWhitespace","labelEnd","name","labelStart","defined","self","this","_balanced","_inactive","balanced","parser","sliceSerialize","now","afterLabelEnd","attempt","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","resolveTo","group","label","text","token","open","close","media","offset","insideSpan","null","_used","destinationAfter","between","call","afterLabel","base","parseInt","content","document","flow","combineExtensions","createTokenizer","miniflat","options","concat","extensions","create","string","initializer","defineProperty","previous","contentStart","contentInitial","lineStart","contentType","next","data","inspectResult","childFlow","childToken","stack","continued","inspectConstruct","subcontinued","inspectStart","containerState","continuation","inspectContinue","inspectLess","currentConstruct","concrete","flowContinue","inspectDone","interrupt","interruptible","containerConstruct","inspectFlowEnd","_closeFlow","lazy","lazyFlowConstruct","check","inspectLazy","flowEnd","documentContinue","documentContinued","flowStart","containerContinue","exitContainers","_tokenizer","continueFlow","documentAfterPeek","defineSkip","write","disable","initial","flowInitial","afterConstruct","prefixSize","subtokenize","contentEnd","continuationConstruct","contentContinue","prefixed","serializeChunks","sliceChunks","initialize","point","line","column","columnStart","resolveAllConstructs","chunks","accountForPotentialSkip","_bufferIndex","_index","fields","pop","constructFactory","construct","info","addResult","onsuccessfulcheck","main","state","chunkIndex","chunk","go","charCodeAt","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","atTab","result","join","view","startIndex","startBufferIndex","endIndex","endBufferIndex","text$1","attention","autolink","blockQuote","characterEscape","characterReference","codeFenced","codeIndented","codeText","definition","hardBreakEscape","headingAtx","htmlFlow","htmlText","labelStartImage","labelStartLink","lineEnding","setextUnderline","thematicBreak","42","43","45","48","49","50","51","52","53","54","55","56","57","62","91","32","35","60","61","95","96","126","38","92","33","93","resolver","classifyCharacter","movePoint","marker","before","sequence","after","_open","_close","openingSequence","closingSequence","use","nextEvents","asciiAtext","asciiControl","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","_container","asciiPunctuation","decodeEntity","asciiDigit","asciiHexDigit","_interopDefaultLegacy","e","default","decodeEntity__default","numeric","closingFenceConstruct","closingSequenceStart","sizeOpen","closingSequenceEnd","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","indentedContentConstruct","afterPrefix","gap","tailExitIndex","headEnterIndex","identifier","labelAfter","titleConstruct","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","kind","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","done","continuationRawEndTag","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","paragraph","heading","search","atCarriageReturn","encoding","match","startPosition","endPosition","toString","lastIndex","exec","Math","ceil","own","hasOwnProperty","subcontent","eventIndex","stream","entered","adjust","startPositions","tokenizer","childEvents","jumps","gaps","isInFirstContentOfListItem","_gfmTasklistFirstContentOfListItem","add","event","lineIndex","otherIndex","otherEvent","subevents","more","_movePreviousLineEndings","initializeFactory","createResolver","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","bufferIndex","tabs","extension","all","hook","left","right","existing","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","labelEscape","seen","atFirstTitleBreak","atTitleBreak","title","titleEscape"],"mappings":"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","file":"static/js/micromark-vendor.87bf74d1.chunk.js","sourcesContent":["'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n"],"sourceRoot":""}