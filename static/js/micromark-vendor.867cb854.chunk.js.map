{"version":3,"sources":["../node_modules/micromark/dist/constant/assign.js","../node_modules/micromark/dist/util/prefix-size.js","../node_modules/micromark/dist/character/ascii-alphanumeric.js","../node_modules/micromark/dist/constant/from-char-code.js","../node_modules/micromark/dist/tokenize/partial-blank-line.js","../node_modules/micromark/dist/util/resolve-all.js","../node_modules/micromark/dist/character/ascii-alpha.js","../node_modules/micromark/dist/character/markdown-line-ending.js","../node_modules/micromark/dist/util/normalize-identifier.js","../node_modules/micromark/dist/util/miniflat.js","../node_modules/micromark/dist/util/chunked-push.js","../node_modules/micromark/dist/character/ascii-control.js","../node_modules/micromark/dist/tokenize/label-end.js","../node_modules/micromark/dist/tokenize/factory-space.js","../node_modules/micromark/dist/constant/has-own-property.js","../node_modules/micromark/dist/util/size-chunks.js","../node_modules/micromark/dist/util/subtokenize.js","../node_modules/micromark/dist/initialize/text.js","../node_modules/micromark/dist/util/combine-extensions.js","../node_modules/micromark/dist/util/classify-character.js","../node_modules/micromark/dist/character/unicode-punctuation.js","../node_modules/micromark/dist/character/markdown-space.js","../node_modules/micromark/dist/character/unicode-whitespace.js","../node_modules/micromark/dist/character/ascii-digit.js","../node_modules/micromark/dist/tokenize/factory-destination.js","../node_modules/micromark/dist/tokenize/factory-label.js","../node_modules/micromark/dist/tokenize/factory-whitespace.js","../node_modules/micromark/dist/tokenize/factory-title.js","../node_modules/micromark/dist/tokenize/thematic-break.js","../node_modules/micromark/dist/util/chunked-splice.js","../node_modules/micromark/dist/util/safe-from-int.js","../node_modules/micromark/dist/parse.js","../node_modules/micromark/dist/initialize/content.js","../node_modules/micromark/dist/initialize/document.js","../node_modules/micromark/dist/initialize/flow.js","../node_modules/micromark/dist/tokenize/content.js","../node_modules/micromark/dist/constant/splice.js","../node_modules/micromark/dist/util/create-tokenizer.js","../node_modules/micromark/dist/util/serialize-chunks.js","../node_modules/micromark/dist/util/slice-chunks.js","../node_modules/micromark/dist/constructs.js","../node_modules/micromark/dist/tokenize/attention.js","../node_modules/micromark/dist/constant/unicode-punctuation-regex.js","../node_modules/micromark/dist/util/move-point.js","../node_modules/micromark/dist/tokenize/autolink.js","../node_modules/micromark/dist/character/ascii-atext.js","../node_modules/micromark/dist/tokenize/block-quote.js","../node_modules/micromark/dist/tokenize/character-escape.js","../node_modules/micromark/dist/character/ascii-punctuation.js","../node_modules/micromark/dist/tokenize/character-reference.js","../node_modules/micromark/dist/character/ascii-hex-digit.js","../node_modules/micromark/dist/tokenize/code-fenced.js","../node_modules/micromark/dist/tokenize/code-indented.js","../node_modules/micromark/dist/tokenize/code-text.js","../node_modules/micromark/dist/tokenize/definition.js","../node_modules/micromark/dist/tokenize/hard-break-escape.js","../node_modules/micromark/dist/tokenize/heading-atx.js","../node_modules/micromark/dist/tokenize/html-flow.js","../node_modules/micromark/dist/constant/html-block-names.js","../node_modules/micromark/dist/constant/html-raw-names.js","../node_modules/micromark/dist/tokenize/html-text.js","../node_modules/micromark/dist/tokenize/label-start-image.js","../node_modules/micromark/dist/tokenize/label-start-link.js","../node_modules/micromark/dist/tokenize/line-ending.js","../node_modules/micromark/dist/tokenize/list.js","../node_modules/micromark/dist/tokenize/setext-underline.js","../node_modules/micromark/dist/preprocess.js","../node_modules/micromark/dist/postprocess.js","../node_modules/micromark/dist/character/markdown-line-ending-or-space.js","../node_modules/micromark/dist/util/regex-check.js","../node_modules/micromark/dist/util/shallow.js"],"names":["assign","Object","module","exports","sizeChunks","require","events","type","tail","length","sliceStream","asciiAlphanumeric","regexCheck","fromCharCode","String","markdownLineEnding","factorySpace","partialBlankLine","tokenize","effects","ok","nok","code","partial","constructs","context","resolve","called","index","resolveAll","indexOf","push","asciiAlpha","value","replace","toLowerCase","toUpperCase","undefined","chunkedSplice","list","items","markdownLineEndingOrSpace","chunkedPush","normalizeIdentifier","shallow","factoryDestination","factoryLabel","factoryTitle","factoryWhitespace","labelEnd","name","labelStart","defined","self","this","_balanced","_inactive","balanced","parser","sliceSerialize","start","end","now","enter","consume","exit","afterLabelEnd","attempt","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","resolveTo","group","label","text","token","open","close","media","offset","slice","insideSpan","null","_used","splice","destinationAfter","between","call","afterLabel","markdownSpace","max","limit","Infinity","size","prefix","own","hasOwnProperty","chunks","subcontent","eventIndex","stream","previous","entered","adjust","startPosition","startPositions","tokenizer","_tokenizer","contentType","childEvents","jumps","gaps","next","defineSkip","isInFirstContentOfListItem","_gfmTasklistFirstContentOfListItem","write","line","add","pop","unshift","event","lineIndex","otherIndex","otherEvent","parameters","subevents","more","_container","_movePreviousLineEndings","defineProperty","initializeFactory","string","resolver","createResolver","field","notText","atBreak","data","resolveAllLineSuffixes","extraResolver","chunk","bufferIndex","tabs","charCodeAt","column","_index","_bufferIndex","miniflat","extension","all","hook","left","right","existing","before","extensions","unicodePunctuation","unicodeWhitespace","unicodePunctuationRegex","asciiDigit","asciiControl","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","labelEscape","seen","marker","atFirstTitleBreak","atTitleBreak","title","titleEscape","thematicBreak","sequence","remove","chunkStart","Array","from","apply","base","parseInt","content","document","flow","combineExtensions","createTokenizer","options","concat","create","initializer","contentStart","contentInitial","lineStart","inspectResult","childFlow","childToken","stack","continued","inspectConstruct","subcontinued","inspectStart","containerState","continuation","inspectContinue","inspectLess","currentConstruct","concrete","flowContinue","inspectDone","interrupt","interruptible","containerConstruct","inspectFlowEnd","_closeFlow","lazy","lazyFlowConstruct","check","inspectLazy","flowEnd","documentContinue","documentContinued","flowStart","containerContinue","exitContainers","continueFlow","documentAfterPeek","disable","initial","flowInitial","afterConstruct","prefixSize","subtokenize","contentEnd","continuationConstruct","contentContinue","prefixed","serializeChunks","sliceChunks","initialize","point","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","main","state","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","atTab","result","join","view","startIndex","startBufferIndex","endIndex","endBufferIndex","text$1","attention","autolink","blockQuote","characterEscape","characterReference","codeFenced","codeIndented","codeText","definition","hardBreakEscape","headingAtx","htmlFlow","htmlText","labelStartImage","labelStartLink","lineEnding","setextUnderline","42","43","45","48","49","50","51","52","53","54","55","56","57","62","91","32","35","60","61","95","96","126","38","92","33","93","classifyCharacter","movePoint","after","_open","_close","openingSequence","closingSequence","use","nextEvents","asciiAtext","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","asciiPunctuation","decodeEntity","asciiHexDigit","_interopDefaultLegacy","e","default","decodeEntity__default","test","numeric","closingFenceConstruct","closingSequenceStart","sizeOpen","closingSequenceEnd","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","indentedContentConstruct","afterPrefix","gap","tailExitIndex","headEnterIndex","identifier","labelAfter","titleConstruct","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","kind","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","done","continuationRawEndTag","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","paragraph","heading","search","atCarriageReturn","encoding","match","endPosition","toString","lastIndex","exec","Math","ceil","regex","object"],"mappings":"qIAEA,IAAIA,EAASC,OAAOD,OAEpBE,EAAOC,QAAUH,G,gCCFjB,IAAII,EAAaC,EAAQ,IAQzBH,EAAOC,QANP,SAAoBG,EAAQC,GAC1B,IAAIC,EAAOF,EAAOA,EAAOG,OAAS,GAClC,OAAKD,GAAQA,EAAK,GAAGD,OAASA,EACvBH,EAAWI,EAAK,GAAGE,YAAYF,EAAK,KADA,I,gCCJ7C,IAEIG,EAFaN,EAAQ,EAEDO,CAAW,cAEnCV,EAAOC,QAAUQ,G,gCCJjB,IAAIE,EAAeC,OAAOD,aAE1BX,EAAOC,QAAUU,G,gCCFjB,IAAIE,EAAqBV,EAAQ,GAC7BW,EAAeX,EAAQ,GAEvBY,EAAmB,CACrBC,SAIF,SAAkCC,EAASC,EAAIC,GAC7C,OAAOL,EAAaG,GAEpB,SAAyBG,GACvB,OAAgB,OAATA,GAAiBP,EAAmBO,GAAQF,EAAGE,GAAQD,EAAIC,KAHtB,eAJ9CC,SAAS,GAWXrB,EAAOC,QAAUc,G,gCCCjBf,EAAOC,QAjBP,SAAoBqB,EAAYlB,EAAQmB,GAKtC,IAJA,IAEIC,EAFAC,EAAS,GACTC,GAAS,IAGJA,EAAQJ,EAAWf,SAC1BiB,EAAUF,EAAWI,GAAOC,aAEbF,EAAOG,QAAQJ,GAAW,IACvCpB,EAASoB,EAAQpB,EAAQmB,GACzBE,EAAOI,KAAKL,IAIhB,OAAOpB,I,gCCdT,IAEI0B,EAFa3B,EAAQ,EAERO,CAAW,YAE5BV,EAAOC,QAAU6B,G,+BCAjB9B,EAAOC,QAJP,SAA4BmB,GAC1B,OAAOA,GAAQ,I,gCCcjBpB,EAAOC,QAfP,SAA6B8B,GAC3B,OACEA,EACGC,QAAQ,cAAe,KACvBA,QAAQ,SAAU,IAMlBC,cACAC,gB,gCCHPlC,EAAOC,QARP,SAAkB8B,GAChB,OAAiB,OAAVA,QAA4BI,IAAVJ,EACrB,GACA,WAAYA,EACZA,EACA,CAACA,K,gCCLP,IAAIK,EAAgBjC,EAAQ,GAW5BH,EAAOC,QATP,SAAqBoC,EAAMC,GACzB,OAAID,EAAK9B,QACP6B,EAAcC,EAAMA,EAAK9B,OAAQ,EAAG+B,GAC7BD,GAGFC,I,gCCCTtC,EAAOC,QARP,SAAsBmB,GACpB,OAGEA,EAAO,IAAe,MAATA,I,gCCLjB,IAAImB,EAA4BpC,EAAQ,GACpCqC,EAAcrC,EAAQ,IACtBiC,EAAgBjC,EAAQ,GACxBsC,EAAsBtC,EAAQ,IAC9BwB,EAAaxB,EAAQ,IACrBuC,EAAUvC,EAAQ,GAClBwC,EAAqBxC,EAAQ,IAC7ByC,EAAezC,EAAQ,IACvB0C,EAAe1C,EAAQ,IACvB2C,EAAoB3C,EAAQ,IAE5B4C,EAAW,CACbC,KAAM,WACNhC,SAiIF,SAA0BC,EAASC,EAAIC,GACrC,IAEI8B,EACAC,EAHAC,EAAOC,KACP1B,EAAQyB,EAAK/C,OAAOG,OAIxB,KAAOmB,KACL,IACkC,eAA/ByB,EAAK/C,OAAOsB,GAAO,GAAGrB,MACU,cAA/B8C,EAAK/C,OAAOsB,GAAO,GAAGrB,QACvB8C,EAAK/C,OAAOsB,GAAO,GAAG2B,UACvB,CACAJ,EAAaE,EAAK/C,OAAOsB,GAAO,GAChC,MAIJ,OAEA,SAAeN,GACb,IAAK6B,EACH,OAAO9B,EAAIC,GAGb,OAAI6B,EAAWK,UAAkBC,EAASnC,IAC1C8B,EACEC,EAAKK,OAAON,QAAQtB,QAClBa,EACEU,EAAKM,eAAe,CAClBC,MAAOT,EAAWU,IAClBA,IAAKR,EAAKS,WAGX,EACP3C,EAAQ4C,MAAM,YACd5C,EAAQ4C,MAAM,eACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,eACb9C,EAAQ8C,KAAK,YACNC,IAGT,SAASA,EAAc5C,GAErB,OAAa,KAATA,EACKH,EAAQgD,QACbC,EACAhD,EACAgC,EAAUhC,EAAKqC,EAHVtC,CAILG,GAGS,KAATA,EACKH,EAAQgD,QACbE,EACAjD,EACAgC,EACIjC,EAAQgD,QAAQG,EAA6BlD,EAAIqC,GACjDA,EALCtC,CAMLG,GAGG8B,EAAUhC,EAAGE,GAAQmC,EAASnC,GAGvC,SAASmC,EAASnC,GAEhB,OADA6B,EAAWI,WAAY,EAChBlC,EAAIC,KAnMbiD,UAoCF,SAA2BjE,EAAQmB,GACjC,IAEI+C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EARAlD,EAAQtB,EAAOG,OACfsE,EAAS,EASb,KAAOnD,KAGL,GAFA+C,EAAQrE,EAAOsB,GAAO,GAElBgD,EAAM,CAER,GACiB,SAAfD,EAAMpE,MACU,cAAfoE,EAAMpE,MAAwBoE,EAAMnB,UAErC,MAIuB,UAArBlD,EAAOsB,GAAO,IAAiC,cAAf+C,EAAMpE,OACxCoE,EAAMnB,WAAY,QAEf,GAAIqB,GACT,GACuB,UAArBvE,EAAOsB,GAAO,KACE,eAAf+C,EAAMpE,MAAwC,cAAfoE,EAAMpE,QACrCoE,EAAMpB,YAEPqB,EAAOhD,EAEY,cAAf+C,EAAMpE,MAAsB,CAC9BwE,EAAS,EACT,WAGoB,aAAfJ,EAAMpE,OACfsE,EAAQjD,GAgDZ,OA5CA4C,EAAQ,CACNjE,KAA+B,cAAzBD,EAAOsE,GAAM,GAAGrE,KAAuB,OAAS,QACtDqD,MAAOhB,EAAQtC,EAAOsE,GAAM,GAAGhB,OAC/BC,IAAKjB,EAAQtC,EAAOA,EAAOG,OAAS,GAAG,GAAGoD,MAE5CY,EAAQ,CACNlE,KAAM,QACNqD,MAAOhB,EAAQtC,EAAOsE,GAAM,GAAGhB,OAC/BC,IAAKjB,EAAQtC,EAAOuE,GAAO,GAAGhB,MAEhCa,EAAO,CACLnE,KAAM,YACNqD,MAAOhB,EAAQtC,EAAOsE,EAAOG,EAAS,GAAG,GAAGlB,KAC5CA,IAAKjB,EAAQtC,EAAOuE,EAAQ,GAAG,GAAGjB,QAOpCkB,EAAQpC,EALRoC,EAAQ,CACN,CAAC,QAASN,EAAO/C,GACjB,CAAC,QAASgD,EAAOhD,IAGQnB,EAAO0E,MAAMJ,EAAO,EAAGA,EAAOG,EAAS,IAElED,EAAQpC,EAAYoC,EAAO,CAAC,CAAC,QAASJ,EAAMjD,KAE5CqD,EAAQpC,EACNoC,EACAjD,EACEJ,EAAQiC,OAAOlC,WAAWyD,WAAWC,KACrC5E,EAAO0E,MAAMJ,EAAOG,EAAS,EAAGF,EAAQ,GACxCpD,IAIJqD,EAAQpC,EAAYoC,EAAO,CACzB,CAAC,OAAQJ,EAAMjD,GACfnB,EAAOuE,EAAQ,GACfvE,EAAOuE,EAAQ,GACf,CAAC,OAAQJ,EAAOhD,KAGlBqD,EAAQpC,EAAYoC,EAAOxE,EAAO0E,MAAMH,EAAQ,IAEhDC,EAAQpC,EAAYoC,EAAO,CAAC,CAAC,OAAQN,EAAO/C,KAC5Ca,EAAchC,EAAQsE,EAAMtE,EAAOG,OAAQqE,GACpCxE,GA5HPuB,WAYF,SAA4BvB,GAC1B,IACIqE,EADA/C,GAAS,EAGb,OAASA,EAAQtB,EAAOG,SACtBkE,EAAQrE,EAAOsB,GAAO,IAGbuD,OACS,eAAfR,EAAMpE,MACU,cAAfoE,EAAMpE,MACS,aAAfoE,EAAMpE,OAGRD,EAAO8E,OAAOxD,EAAQ,EAAkB,eAAf+C,EAAMpE,KAAwB,EAAI,GAC3DoE,EAAMpE,KAAO,OACbqB,KAIJ,OAAOtB,IA9BL8D,EAAoB,CACtBlD,SAmMF,SAA0BC,EAASC,EAAIC,GACrC,OAEA,SAAeC,GAKb,OAJAH,EAAQ4C,MAAM,YACd5C,EAAQ4C,MAAM,kBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,kBACNjB,EAAkB7B,EAASyD,IAGpC,SAASA,EAAKtD,GACZ,OAAa,KAATA,EACKuC,EAAIvC,GAGNuB,EACL1B,EACAkE,EACAhE,EACA,sBACA,6BACA,mCACA,yBACA,4BACA,EATKwB,CAULvB,GAGJ,SAAS+D,EAAiB/D,GACxB,OAAOmB,EAA0BnB,GAC7B0B,EAAkB7B,EAASmE,EAA3BtC,CAAoC1B,GACpCuC,EAAIvC,GAGV,SAASgE,EAAQhE,GACf,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzByB,EACL5B,EACA6B,EAAkB7B,EAAS0C,GAC3BxC,EACA,gBACA,sBACA,sBANK0B,CAOLzB,GAGGuC,EAAIvC,GAGb,SAASuC,EAAIvC,GACX,OAAa,KAATA,GACFH,EAAQ4C,MAAM,kBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,kBACb9C,EAAQ8C,KAAK,YACN7C,GAGFC,EAAIC,MA5PX+C,EAAyB,CAC3BnD,SA+PF,SAA+BC,EAASC,EAAIC,GAC1C,IAAIgC,EAAOC,KACX,OAEA,SAAehC,GACb,OAAOwB,EAAayC,KAClBlC,EACAlC,EACAqE,EACAnE,EACA,YACA,kBACA,kBAPKyB,CAQLxB,IAGJ,SAASkE,EAAWlE,GAClB,OAAO+B,EAAKK,OAAON,QAAQtB,QACzBa,EACEU,EAAKM,eAAeN,EAAK/C,OAAO+C,EAAK/C,OAAOG,OAAS,GAAG,IAAIuE,MAAM,GAAI,KAEtE,EACA3D,EAAIC,GACJF,EAAGE,MApRPgD,EAA8B,CAChCpD,SAuRF,SAAoCC,EAASC,EAAIC,GAC/C,OAEA,SAAeC,GAKb,OAJAH,EAAQ4C,MAAM,aACd5C,EAAQ4C,MAAM,mBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,mBACNW,GAGT,SAASA,EAAKtD,GACZ,OAAa,KAATA,GACFH,EAAQ4C,MAAM,mBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,mBACb9C,EAAQ8C,KAAK,aACN7C,GAGFC,EAAIC,MAIfpB,EAAOC,QAAU8C,G,+BCvUjB,IAAIwC,EAAgBpF,EAAQ,GA2B5BH,EAAOC,QAzBP,SAAsBgB,EAASC,EAAIb,EAAMmF,GACvC,IAAIC,EAAQD,EAAMA,EAAM,EAAIE,IACxBC,EAAO,EACX,OAEA,SAAevE,GACb,GAAImE,EAAcnE,GAEhB,OADAH,EAAQ4C,MAAMxD,GACPuF,EAAOxE,GAGhB,OAAOF,EAAGE,IAGZ,SAASwE,EAAOxE,GACd,OAAImE,EAAcnE,IAASuE,IAASF,GAClCxE,EAAQ6C,QAAQ1C,GACTwE,IAGT3E,EAAQ8C,KAAK1D,GACNa,EAAGE,O,gCCvBd,IAAIyE,EAAM,GAAGC,eAEb9F,EAAOC,QAAU4F,G,gCCWjB7F,EAAOC,QAXP,SAAoB8F,GAIlB,IAHA,IAAIrE,GAAS,EACTiE,EAAO,IAEFjE,EAAQqE,EAAOxF,QACtBoF,GAAiC,kBAAlBI,EAAOrE,GAAsBqE,EAAOrE,GAAOnB,OAAS,EAGrE,OAAOoF,I,gCCVT,IAAI7F,EAASK,EAAQ,IACjBiC,EAAgBjC,EAAQ,GACxBuC,EAAUvC,EAAQ,GAkGtB,SAAS6F,EAAW5F,EAAQ6F,GAkB1B,IAjBA,IASIC,EACAC,EACAzE,EACA0E,EACAzC,EACA0C,EAdA5B,EAAQrE,EAAO6F,GAAY,GAC3B1E,EAAUnB,EAAO6F,GAAY,GAC7BK,EAAgBL,EAAa,EAC7BM,EAAiB,GACjBC,EACF/B,EAAMgC,YAAclF,EAAQiC,OAAOiB,EAAMiC,aAAajC,EAAMf,OAC1DiD,EAAcH,EAAUpG,OACxBwG,EAAQ,GACRC,EAAO,GASJpC,GAAO,CAEZ,KAAOrE,IAASkG,GAAe,KAAO7B,IAItC8B,EAAe1E,KAAKyE,GAEf7B,EAAMgC,aACTP,EAAS3E,EAAQf,YAAYiE,GAExBA,EAAMqC,MACTZ,EAAOrE,KAAK,MAGVsE,GACFK,EAAUO,WAAWtC,EAAMf,OAGzBe,EAAMuC,6BACRR,EAAUS,oCAAqC,GAGjDT,EAAUU,MAAMhB,GAEZzB,EAAMuC,6BACRR,EAAUS,wCAAqC9E,IAInDgE,EAAW1B,EACXA,EAAQA,EAAMqC,KAOhB,IAHArC,EAAQ0B,EACRzE,EAAQiF,EAAYpG,OAEbmB,KAGyB,UAA1BiF,EAAYjF,GAAO,GACrB0E,GAAU,EAGVA,GACAO,EAAYjF,GAAO,GAAGrB,OAASsG,EAAYjF,EAAQ,GAAG,GAAGrB,MACzDsG,EAAYjF,GAAO,GAAGgC,MAAMyD,OAASR,EAAYjF,GAAO,GAAGiC,IAAIwD,OAE/DC,EAAIT,EAAY7B,MAAMpD,EAAQ,EAAGiC,IAEjCc,EAAMgC,WAAahC,EAAMqC,UAAO3E,EAChCsC,EAAQA,EAAM0B,SACdxC,EAAMjC,EAAQ,GAWlB,IANA8E,EAAUpG,OAASqE,EAAMgC,WAAahC,EAAMqC,UAAO3E,EAEnDiF,EAAIT,EAAY7B,MAAM,EAAGnB,IACzBjC,GAAS,EACT2E,EAAS,IAEA3E,EAAQkF,EAAMrG,QACrBsG,EAAKR,EAASO,EAAMlF,GAAO,IAAM2E,EAASO,EAAMlF,GAAO,GACvD2E,GAAUO,EAAMlF,GAAO,GAAKkF,EAAMlF,GAAO,GAAK,EAGhD,OAAOmF,EAEP,SAASO,EAAItC,GACX,IAAIpB,EAAQ6C,EAAec,MAC3BT,EAAMU,QAAQ,CAAC5D,EAAOA,EAAQoB,EAAMvE,OAAS,IAC7C6B,EAAchC,EAAQsD,EAAO,EAAGoB,IAIpC9E,EAAOC,QAhMP,SAAqBG,GAWnB,IAVA,IAEImH,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EARAjB,EAAQ,GACRlF,GAAS,IASJA,EAAQtB,EAAOG,QAAQ,CAC9B,KAAOmB,KAASkF,GACdlF,EAAQkF,EAAMlF,GAMhB,GAHA6F,EAAQnH,EAAOsB,GAIbA,GACkB,cAAlB6F,EAAM,GAAGlH,MACqB,mBAA9BD,EAAOsB,EAAQ,GAAG,GAAGrB,QAGrBoH,EAAa,IADbG,EAAYL,EAAM,GAAGd,WAAWrG,QAIPG,QACW,oBAAlCqH,EAAUH,GAAY,GAAGpH,OAEzBoH,GAAc,GAIdA,EAAaG,EAAUrH,QACW,YAAlCqH,EAAUH,GAAY,GAAGpH,MAEzB,OAASoH,EAAaG,EAAUrH,QACQ,YAAlCqH,EAAUH,GAAY,GAAGpH,MAIS,cAAlCuH,EAAUH,GAAY,GAAGpH,OAC3BuH,EAAUH,GAAY,GAAGT,4BAA6B,EACtDS,KAMR,GAAiB,UAAbF,EAAM,GACJA,EAAM,GAAGb,cACX5G,EAAO8G,EAAOZ,EAAW5F,EAAQsB,IACjCA,EAAQkF,EAAMlF,GACdmG,GAAO,QAGN,GAAIN,EAAM,GAAGO,YAAcP,EAAM,GAAGQ,yBAA0B,CAIjE,IAHAN,EAAa/F,EACb8F,OAAYrF,EAELsF,MAIoB,gBAHzBC,EAAatH,EAAOqH,IAGP,GAAGpH,MACS,oBAAvBqH,EAAW,GAAGrH,OAEQ,UAAlBqH,EAAW,KACTF,IACFpH,EAAOoH,GAAW,GAAGnH,KAAO,mBAG9BqH,EAAW,GAAGrH,KAAO,aACrBmH,EAAYC,GAOdD,IAEFD,EAAM,GAAG5D,IAAMjB,EAAQtC,EAAOoH,GAAW,GAAG9D,QAE5CiE,EAAavH,EAAO0E,MAAM0C,EAAW9F,IAC1B4F,QAAQC,GACnBnF,EAAchC,EAAQoH,EAAW9F,EAAQ8F,EAAY,EAAGG,KAK9D,OAAQE,I,gCCjGV9H,OAAOiI,eAAe/H,EAAS,aAAc,CAAC8B,OAAO,IAErD,IAAIjC,EAASK,EAAQ,IACjBuC,EAAUvC,EAAQ,GAElBqE,EAAOyD,EAAkB,QACzBC,EAASD,EAAkB,UAC3BE,EAAW,CACbxG,WAAYyG,KAGd,SAASH,EAAkBI,GACzB,MAAO,CACLrH,SAMF,SAAwBC,GACtB,IAAIkC,EAAOC,KACP9B,EAAa8B,KAAKI,OAAOlC,WAAW+G,GACpC7D,EAAOvD,EAAQgD,QAAQ3C,EAAYoC,EAAO4E,GAC9C,OAAO5E,EAEP,SAASA,EAAMtC,GACb,OAAOmH,EAAQnH,GAAQoD,EAAKpD,GAAQkH,EAAQlH,GAG9C,SAASkH,EAAQlH,GACf,GAAa,OAATA,EAOJ,OAFAH,EAAQ4C,MAAM,QACd5C,EAAQ6C,QAAQ1C,GACToH,EANLvH,EAAQ6C,QAAQ1C,GASpB,SAASoH,EAAKpH,GACZ,OAAImH,EAAQnH,IACVH,EAAQ8C,KAAK,QACNS,EAAKpD,KAGdH,EAAQ6C,QAAQ1C,GACToH,GAGT,SAASD,EAAQnH,GACf,IAAIiB,EAAOf,EAAWF,GAClBM,GAAS,EAEb,GAAa,OAATN,EACF,OAAO,EAGT,GAAIiB,EACF,OAASX,EAAQW,EAAK9B,QACpB,IACG8B,EAAKX,GAAOyE,UACb9D,EAAKX,GAAOyE,SAASd,KAAKlC,EAAMA,EAAKgD,UAErC,OAAO,IAlDfxE,WAAYyG,EACA,SAAVC,EAAmBI,OAAyBtG,IAyDlD,SAASiG,EAAeM,GACtB,OAEA,SAAwBtI,EAAQmB,GAC9B,IACIsC,EADAnC,GAAS,EAIb,OAASA,GAAStB,EAAOG,aACT4B,IAAV0B,EACEzD,EAAOsB,IAAoC,SAA1BtB,EAAOsB,GAAO,GAAGrB,OACpCwD,EAAQnC,EACRA,KAEQtB,EAAOsB,IAAoC,SAA1BtB,EAAOsB,GAAO,GAAGrB,OAExCqB,IAAUmC,EAAQ,IACpBzD,EAAOyD,GAAO,GAAGF,IAAMvD,EAAOsB,EAAQ,GAAG,GAAGiC,IAC5CvD,EAAO8E,OAAOrB,EAAQ,EAAGnC,EAAQmC,EAAQ,GACzCnC,EAAQmC,EAAQ,GAGlBA,OAAQ1B,GAIZ,OAAOuG,EAAgBA,EAActI,EAAQmB,GAAWnB,GAU5D,SAASqI,EAAuBrI,EAAQmB,GAWtC,IAVA,IACIwE,EACAyC,EACAG,EACAjH,EACAkH,EACAjD,EACAkD,EACApE,EARAwB,GAAc,IAUTA,GAAc7F,EAAOG,QAC5B,IACG0F,IAAe7F,EAAOG,QACU,eAA/BH,EAAO6F,GAAY,GAAG5F,OACW,SAAnCD,EAAO6F,EAAa,GAAG,GAAG5F,KAC1B,CAQA,IAPAmI,EAAOpI,EAAO6F,EAAa,GAAG,GAE9BvE,GADAqE,EAASxE,EAAQf,YAAYgI,IACdjI,OACfqI,GAAe,EACfjD,EAAO,EACPkD,OAAO1G,EAEAT,KAGL,GAAqB,kBAFrBiH,EAAQ5C,EAAOrE,IAEgB,CAG7B,IAFAkH,EAAcD,EAAMpI,OAEyB,KAAtCoI,EAAMG,WAAWF,EAAc,IACpCjD,IACAiD,IAGF,GAAIA,EAAa,MACjBA,GAAe,OAEZ,IAAe,IAAXD,EACPE,GAAO,EACPlD,SACK,IAAe,IAAXgD,EACN,CAEHjH,IACA,MAIAiE,IACFlB,EAAQ,CACNpE,KACE4F,IAAe7F,EAAOG,QAAUsI,GAAQlD,EAAO,EAC3C,aACA,oBACNjC,MAAO,CACLyD,KAAMqB,EAAK7E,IAAIwD,KACf4B,OAAQP,EAAK7E,IAAIoF,OAASpD,EAC1Bd,OAAQ2D,EAAK7E,IAAIkB,OAASc,EAC1BqD,OAAQR,EAAK9E,MAAMsF,OAAStH,EAC5BuH,aAAcvH,EACVkH,EACAJ,EAAK9E,MAAMuF,aAAeL,GAEhCjF,IAAKjB,EAAQ8F,EAAK7E,MAEpB6E,EAAK7E,IAAMjB,EAAQ+B,EAAMf,OAErB8E,EAAK9E,MAAMmB,SAAW2D,EAAK7E,IAAIkB,OACjC/E,EAAO0I,EAAM/D,IAEbrE,EAAO8E,OACLe,EACA,EACA,CAAC,QAASxB,EAAOlD,GACjB,CAAC,OAAQkD,EAAOlD,IAElB0E,GAAc,IAIlBA,IAIJ,OAAO7F,EAGTH,EAAQkI,SAAWA,EACnBlI,EAAQiI,OAASA,EACjBjI,EAAQuE,KAAOA,G,gCCtMf,IAAIsB,EAAiB3F,EAAQ,IACzBiC,EAAgBjC,EAAQ,GACxB+I,EAAW/I,EAAQ,IAavB,SAASgJ,EAAUC,EAAKD,GACtB,IAAIE,EACAC,EACAC,EACAnI,EAEJ,IAAKiI,KAAQF,EAIX,IAAK/H,KAHLkI,EAAOxD,EAAeT,KAAK+D,EAAKC,GAAQD,EAAIC,GAASD,EAAIC,GAAQ,GACjEE,EAAQJ,EAAUE,GAGhBC,EAAKlI,GAAQE,EACX4H,EAASK,EAAMnI,IACf0E,EAAeT,KAAKiE,EAAMlI,GAAQkI,EAAKlI,GAAQ,IAMvD,SAASE,EAAWe,EAAMmH,GAIxB,IAHA,IAAI9H,GAAS,EACT+H,EAAS,KAEJ/H,EAAQW,EAAK9B,SACE,UAApB8B,EAAKX,GAAO0F,IAAkBoC,EAAWC,GAAQ5H,KAAKQ,EAAKX,IAI/D,OADAU,EAAcoH,EAAU,EAAG,EAAGC,GACvBD,EAGTxJ,EAAOC,QA1CP,SAA2ByJ,GAIzB,IAHA,IAAIN,EAAM,GACN1H,GAAS,IAEJA,EAAQgI,EAAWnJ,QAC1B4I,EAAUC,EAAKM,EAAWhI,IAG5B,OAAO0H,I,gCCZT,IAAI7G,EAA4BpC,EAAQ,GACpCwJ,EAAqBxJ,EAAQ,IAC7ByJ,EAAoBzJ,EAAQ,IAoBhCH,EAAOC,QAdP,SAA2BmB,GACzB,OACW,OAATA,GACAmB,EAA0BnB,IAC1BwI,EAAkBxI,GAEX,EAGLuI,EAAmBvI,GACd,OADT,I,gCCjBF,IAAIyI,EAA0B1J,EAAQ,KAKlCwJ,EAJaxJ,EAAQ,EAIAO,CAAWmJ,GAEpC7J,EAAOC,QAAU0J,G,+BCHjB3J,EAAOC,QAJP,SAAuBmB,GACrB,OAAiB,IAAVA,IAAyB,IAAVA,GAAwB,KAATA,I,gCCDvC,IAEIwI,EAFazJ,EAAQ,EAEDO,CAAW,MAEnCV,EAAOC,QAAU2J,G,gCCJjB,IAEIE,EAFa3J,EAAQ,EAERO,CAAW,MAE5BV,EAAOC,QAAU6J,G,gCCJjB,IAAIC,EAAe5J,EAAQ,IACvBoC,EAA4BpC,EAAQ,GACpCU,EAAqBV,EAAQ,GA8HjCH,EAAOC,QA3HP,SACEgB,EACAC,EACAC,EACAd,EACA2J,EACAC,EACAC,EACAC,EACA3E,GAEA,IAAIC,EAAQD,GAAOE,IACf0E,EAAU,EACd,OAEA,SAAehJ,GACb,GAAa,KAATA,EAMF,OALAH,EAAQ4C,MAAMxD,GACdY,EAAQ4C,MAAMmG,GACd/I,EAAQ4C,MAAMoG,GACdhJ,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAKkG,GACNI,EAGT,GAAIN,EAAa3I,IAAkB,KAATA,EACxB,OAAOD,EAAIC,GASb,OANAH,EAAQ4C,MAAMxD,GACdY,EAAQ4C,MAAMqG,GACdjJ,EAAQ4C,MAAMsG,GACdlJ,EAAQ4C,MAAM,cAAe,CAC3B6C,YAAa,WAER4D,EAAelJ,IAGxB,SAASiJ,EAA0BjJ,GACjC,OAAa,KAATA,GACFH,EAAQ4C,MAAMoG,GACdhJ,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAKkG,GACbhJ,EAAQ8C,KAAKiG,GACb/I,EAAQ8C,KAAK1D,GACNa,IAGTD,EAAQ4C,MAAMsG,GACdlJ,EAAQ4C,MAAM,cAAe,CAC3B6C,YAAa,WAER6D,EAAoBnJ,IAG7B,SAASmJ,EAAoBnJ,GAC3B,OAAa,KAATA,GACFH,EAAQ8C,KAAK,eACb9C,EAAQ8C,KAAKoG,GACNE,EAA0BjJ,IAGtB,OAATA,GAA0B,KAATA,GAAeP,EAAmBO,GAC9CD,EAAIC,IAGbH,EAAQ6C,QAAQ1C,GACA,KAATA,EAAcoJ,EAA4BD,GAGnD,SAASC,EAA0BpJ,GACjC,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCH,EAAQ6C,QAAQ1C,GACTmJ,GAGFA,EAAoBnJ,GAG7B,SAASkJ,EAAelJ,GACtB,OAAa,KAATA,IACIgJ,EAAU3E,EAActE,EAAIC,IAClCH,EAAQ6C,QAAQ1C,GACTkJ,GAGI,KAATlJ,EACGgJ,KAQLnJ,EAAQ6C,QAAQ1C,GACTkJ,IARLrJ,EAAQ8C,KAAK,eACb9C,EAAQ8C,KAAKoG,GACblJ,EAAQ8C,KAAKmG,GACbjJ,EAAQ8C,KAAK1D,GACNa,EAAGE,IAOD,OAATA,GAAiBmB,EAA0BnB,GACzCgJ,EAAgBjJ,EAAIC,IACxBH,EAAQ8C,KAAK,eACb9C,EAAQ8C,KAAKoG,GACblJ,EAAQ8C,KAAKmG,GACbjJ,EAAQ8C,KAAK1D,GACNa,EAAGE,IAGR2I,EAAa3I,GAAcD,EAAIC,IACnCH,EAAQ6C,QAAQ1C,GACA,KAATA,EAAcqJ,EAAuBH,GAG9C,SAASG,EAAqBrJ,GAC5B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCH,EAAQ6C,QAAQ1C,GACTkJ,GAGFA,EAAelJ,M,gCC5H1B,IAAIP,EAAqBV,EAAQ,GAC7BoF,EAAgBpF,EAAQ,GAoF5BH,EAAOC,QAjFP,SAAsBgB,EAASC,EAAIC,EAAKd,EAAMqK,EAAYP,GACxD,IAEI3B,EAFArF,EAAOC,KACPuC,EAAO,EAEX,OAEA,SAAevE,GAMb,OALAH,EAAQ4C,MAAMxD,GACdY,EAAQ4C,MAAM6G,GACdzJ,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK2G,GACbzJ,EAAQ4C,MAAMsG,GACP5B,GAGT,SAASA,EAAQnH,GACf,OACW,OAATA,GACS,KAATA,GACU,KAATA,IAAgBoH,GAEP,KAATpH,IAEEuE,GAED,2BAA4BxC,EAAKK,OAAOlC,YAC1CqE,EAAO,IAEAxE,EAAIC,GAGA,KAATA,GACFH,EAAQ8C,KAAKoG,GACblJ,EAAQ4C,MAAM6G,GACdzJ,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK2G,GACbzJ,EAAQ8C,KAAK1D,GACNa,GAGLL,EAAmBO,IACrBH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACNwE,IAGTtH,EAAQ4C,MAAM,cAAe,CAC3B6C,YAAa,WAERnC,EAAMnD,IAGf,SAASmD,EAAMnD,GACb,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAP,EAAmBO,IACnBuE,IAAS,KAET1E,EAAQ8C,KAAK,eACNwE,EAAQnH,KAGjBH,EAAQ6C,QAAQ1C,GAChBoH,EAAOA,IAASjD,EAAcnE,GACd,KAATA,EAAcuJ,EAAcpG,GAGrC,SAASoG,EAAYvJ,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCH,EAAQ6C,QAAQ1C,GAChBuE,IACOpB,GAGFA,EAAMnD,M,gCCjFjB,IAAIP,EAAqBV,EAAQ,GAC7BoF,EAAgBpF,EAAQ,GACxBW,EAAeX,EAAQ,GA2B3BH,EAAOC,QAzBP,SAA2BgB,EAASC,GAClC,IAAI0J,EACJ,OAEA,SAASlH,EAAMtC,GACb,GAAIP,EAAmBO,GAKrB,OAJAH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACb6G,GAAO,EACAlH,EAGT,GAAI6B,EAAcnE,GAChB,OAAON,EACLG,EACAyC,EACAkH,EAAO,aAAe,aAHjB9J,CAILM,GAGJ,OAAOF,EAAGE,M,gCCzBd,IAAIP,EAAqBV,EAAQ,GAC7BW,EAAeX,EAAQ,GAuE3BH,EAAOC,QArEP,SAAsBgB,EAASC,EAAIC,EAAKd,EAAMqK,EAAYP,GACxD,IAAIU,EACJ,OAEA,SAAezJ,GAMb,OALAH,EAAQ4C,MAAMxD,GACdY,EAAQ4C,MAAM6G,GACdzJ,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK2G,GACbG,EAAkB,KAATzJ,EAAc,GAAKA,EACrB0J,GAGT,SAASA,EAAkB1J,GACzB,OAAIA,IAASyJ,GACX5J,EAAQ4C,MAAM6G,GACdzJ,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK2G,GACbzJ,EAAQ8C,KAAK1D,GACNa,IAGTD,EAAQ4C,MAAMsG,GACPY,EAAa3J,IAGtB,SAAS2J,EAAa3J,GACpB,OAAIA,IAASyJ,GACX5J,EAAQ8C,KAAKoG,GACNW,EAAkBD,IAGd,OAATzJ,EACKD,EAAIC,GAGTP,EAAmBO,IACrBH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACNjD,EAAaG,EAAS8J,EAAc,gBAG7C9J,EAAQ4C,MAAM,cAAe,CAC3B6C,YAAa,WAERsE,EAAM5J,IAGf,SAAS4J,EAAM5J,GACb,OAAIA,IAASyJ,GAAmB,OAATzJ,GAAiBP,EAAmBO,IACzDH,EAAQ8C,KAAK,eACNgH,EAAa3J,KAGtBH,EAAQ6C,QAAQ1C,GACA,KAATA,EAAc6J,EAAcD,GAGrC,SAASC,EAAY7J,GACnB,OAAIA,IAASyJ,GAAmB,KAATzJ,GACrBH,EAAQ6C,QAAQ1C,GACT4J,GAGFA,EAAM5J,M,gCCpEjB,IAAIP,EAAqBV,EAAQ,GAC7BoF,EAAgBpF,EAAQ,GACxBW,EAAeX,EAAQ,GAEvB+K,EAAgB,CAClBlI,KAAM,gBACNhC,SAGF,SAA+BC,EAASC,EAAIC,GAC1C,IACI0J,EADAlF,EAAO,EAEX,OAEA,SAAevE,GAGb,OAFAH,EAAQ4C,MAAM,iBACdgH,EAASzJ,EACFmH,EAAQnH,IAGjB,SAASmH,EAAQnH,GACf,OAAIA,IAASyJ,GACX5J,EAAQ4C,MAAM,yBACPsH,EAAS/J,IAGdmE,EAAcnE,GACTN,EAAaG,EAASsH,EAAS,aAA/BzH,CAA6CM,GAGlDuE,EAAO,GAAe,OAATvE,IAAkBP,EAAmBO,GAC7CD,EAAIC,IAGbH,EAAQ8C,KAAK,iBACN7C,EAAGE,IAGZ,SAAS+J,EAAS/J,GAChB,OAAIA,IAASyJ,GACX5J,EAAQ6C,QAAQ1C,GAChBuE,IACOwF,IAGTlK,EAAQ8C,KAAK,yBACNwE,EAAQnH,OAInBpB,EAAOC,QAAUiL,G,+BClDjB,IAAIhG,EAAS/E,EAAQ,KAmCrBH,EAAOC,QA/BP,SAAuBoC,EAAMqB,EAAO0H,EAAQ9I,GAC1C,IAEIqF,EAFAhE,EAAMtB,EAAK9B,OACX8K,EAAa,EAWjB,GAPE3H,EADEA,EAAQ,GACDA,EAAQC,EAAM,EAAIA,EAAMD,EAEzBA,EAAQC,EAAMA,EAAMD,EAG9B0H,EAASA,EAAS,EAAIA,EAAS,EAE3B9I,EAAM/B,OAAS,KACjBoH,EAAa2D,MAAMC,KAAKjJ,IACbgF,QAAQ5D,EAAO0H,GAC1BlG,EAAOsG,MAAMnJ,EAAMsF,QAKnB,IAFIyD,GAAQlG,EAAOsG,MAAMnJ,EAAM,CAACqB,EAAO0H,IAEhCC,EAAa/I,EAAM/B,SACxBoH,EAAarF,EAAMwC,MAAMuG,EAAYA,EAAa,MACvC/D,QAAQ5D,EAAO,GAC1BwB,EAAOsG,MAAMnJ,EAAMsF,GACnB0D,GAAc,IACd3H,GAAS,M,iCC9Bf,IAAI/C,EAAeR,EAAQ,IAuB3BH,EAAOC,QArBP,SAAqB8B,EAAO0J,GAC1B,IAAIrK,EAAOsK,SAAS3J,EAAO0J,GAE3B,OAEErK,EAAO,GACE,KAATA,GACCA,EAAO,IAAMA,EAAO,IACpBA,EAAO,KAAOA,EAAO,KACrBA,EAAO,OAASA,EAAO,OACvBA,EAAO,OAASA,EAAO,OACL,SAAX,MAAPA,IACkB,SAAX,MAAPA,IACDA,EAAO,QAEA,SAGFT,EAAaS,K,iCCpBtB,IAAIuK,EAAUxL,EAAQ,KAClByL,EAAWzL,EAAQ,KACnB0L,EAAO1L,EAAQ,KACfqE,EAAOrE,EAAQ,IACf2L,EAAoB3L,EAAQ,IAC5B4L,EAAkB5L,EAAQ,KAC1B+I,EAAW/I,EAAQ,IACnBmB,EAAanB,EAAQ,KA0BzBH,EAAOC,QAxBP,SAAe+L,GACb,IACIxI,EAAS,CACXN,QAAS,GACT5B,WAAYwK,EACV,CAACxK,GAAY2K,OAAO/C,GAJT8C,GAAW,IAIgBtC,cAExCiC,QAASO,EAAOP,GAChBC,SAAUM,EAAON,GACjBC,KAAMK,EAAOL,GACb3D,OAAQgE,EAAO1H,EAAK0D,QACpB1D,KAAM0H,EAAO1H,EAAKA,OAEpB,OAAOhB,EAEP,SAAS0I,EAAOC,GACd,OAEA,SAAiBZ,GACf,OAAOQ,EAAgBvI,EAAQ2I,EAAaZ,O,iCC5BlDxL,OAAOiI,eAAe/H,EAAS,aAAc,CAAC8B,OAAO,IAErD,IAAIlB,EAAqBV,EAAQ,GAC7BW,EAAeX,EAAQ,GAEvBa,EAEJ,SAA2BC,GACzB,IAKIkF,EALAiG,EAAenL,EAAQgD,QACzBb,KAAKI,OAAOlC,WAAW+K,gBAOzB,SAAoCjL,GAClC,GAAa,OAATA,EAEF,YADAH,EAAQ6C,QAAQ1C,GAOlB,OAHAH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACNjD,EAAaG,EAASmL,EAAc,iBAG7C,SAA0BhL,GAExB,OADAH,EAAQ4C,MAAM,aACPyI,EAAUlL,MAhBnB,OAAOgL,EAmBP,SAASE,EAAUlL,GACjB,IAAIqD,EAAQxD,EAAQ4C,MAAM,YAAa,CACrC6C,YAAa,OACbP,SAAUA,IAQZ,OALIA,IACFA,EAASW,KAAOrC,GAGlB0B,EAAW1B,EACJ+D,EAAKpH,GAGd,SAASoH,EAAKpH,GACZ,OAAa,OAATA,GACFH,EAAQ8C,KAAK,aACb9C,EAAQ8C,KAAK,kBACb9C,EAAQ6C,QAAQ1C,IAIdP,EAAmBO,IACrBH,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,aACNuI,IAGTrL,EAAQ6C,QAAQ1C,GACToH,KAIXvI,EAAQe,SAAWA,G,iCClEnBjB,OAAOiI,eAAe/H,EAAS,aAAc,CAAC8B,OAAO,IAErD,IAAIlB,EAAqBV,EAAQ,GAC7BW,EAAeX,EAAQ,GACvBY,EAAmBZ,EAAQ,IAE3Ba,EAQJ,SAA4BC,GAC1B,IAOIsL,EACAC,EACAC,EATAtJ,EAAOC,KACPsJ,EAAQ,GACRC,EAAY,EACZC,EAAmB,CACrB5L,SAoHF,SAAyBC,EAASC,GAChC,IAAI2L,EAAe,EAEnB,OADAN,EAAgB,GACTO,EAEP,SAASA,EAAa1L,GACpB,OAAIyL,EAAeH,EAAMnM,QACvB4C,EAAK4J,eAAiBL,EAAMG,GAAc,GACnC5L,EAAQgD,QACbyI,EAAMG,GAAc,GAAGG,aACvBC,EACAC,EAHKjM,CAILG,IAIAoL,EAAUW,kBAAoBX,EAAUW,iBAAiBC,UAC3Db,EAAcc,cAAe,EACtBC,EAAYlM,KAGrB+B,EAAKoK,UACHf,EAAUW,kBAAoBX,EAAUW,iBAAiBK,cAC3DrK,EAAK4J,eAAiB,GACf9L,EAAQgD,QACbwJ,EACAC,EACAJ,EAHKrM,CAILG,IAGJ,SAAS6L,EAAgB7L,GAEvB,OADAyL,IACO1J,EAAK4J,eAAeY,WACvBD,EAAetM,GACf0L,EAAa1L,GAGnB,SAAS8L,EAAY9L,GACnB,OAAIoL,EAAUW,kBAAoBX,EAAUW,iBAAiBS,MAE3DzK,EAAK4J,eAAiB,GACf9L,EAAQgD,QACbwJ,EACAC,EACAzM,EAAQgD,QACN4J,EACAH,EACAzM,EAAQ6M,MAAM/M,EAAkB2M,EAAgBK,IAN7C9M,CAQLG,IAGGsM,EAAetM,GAGxB,SAAS2M,EAAY3M,GAKnB,OAHAyL,EAAeH,EAAMnM,OACrBgM,EAAcqB,MAAO,EACrBrB,EAAcc,cAAe,EACtBC,EAAYlM,GAGrB,SAASsM,EAAetM,GAEtB,OADAmL,EAAcyB,SAAU,EACjBV,EAAYlM,GAGrB,SAASkM,EAAYlM,GAGnB,OAFAmL,EAAcI,UAAYE,EAC1B1J,EAAKoK,UAAYpK,EAAK4J,oBAAiB5K,EAChCjB,EAAGE,KA3LZC,SAAS,GAKX,OAAOqC,EAEP,SAASA,EAAMtC,GACb,OAAIuL,EAAYD,EAAMnM,QACpB4C,EAAK4J,eAAiBL,EAAMC,GAAW,GAChC1L,EAAQgD,QACbyI,EAAMC,GAAW,GAAGK,aACpBiB,EACAC,EAHKjN,CAILG,IAGG8M,EAAkB9M,GAG3B,SAAS6M,EAAiB7M,GAExB,OADAuL,IACOjJ,EAAMtC,GAGf,SAAS8M,EAAkB9M,GAGzB,OAAImL,GAAiBA,EAAcc,aAC1Bc,EAAU/M,IAGnB+B,EAAKoK,UACHf,GACAA,EAAUW,kBACVX,EAAUW,iBAAiBK,cAC7BrK,EAAK4J,eAAiB,GACf9L,EAAQgD,QACbwJ,EACAW,EACAD,EAHKlN,CAILG,IAGJ,SAASgN,EAAkBhN,GAGzB,OAFAsL,EAAM7K,KAAK,CAACsB,EAAKgK,iBAAkBhK,EAAK4J,iBACxC5J,EAAK4J,oBAAiB5K,EACf+L,EAAkB9M,GAG3B,SAAS+M,EAAU/M,GACjB,OAAa,OAATA,GACFiN,EAAe,GAAG,QAClBpN,EAAQ6C,QAAQ1C,KAIlBoL,EAAYA,GAAarJ,EAAKK,OAAOqI,KAAK1I,EAAKS,OAC/C3C,EAAQ4C,MAAM,YAAa,CACzB6C,YAAa,OACbP,SAAUsG,EACVhG,WAAY+F,IAEPa,EAAajM,IAGtB,SAASiM,EAAajM,GACpB,OAAa,OAATA,GACFkN,EAAarN,EAAQ8C,KAAK,cACnBoK,EAAU/M,IAGfP,EAAmBO,IACrBH,EAAQ6C,QAAQ1C,GAChBkN,EAAarN,EAAQ8C,KAAK,cACnB9C,EAAQ6M,MAAMlB,EAAkB2B,KAGzCtN,EAAQ6C,QAAQ1C,GACTiM,GAGT,SAASkB,EAAkBnN,GAMzB,OALAiN,EACE9B,EAAcI,UACdJ,GAAiBA,EAAcyB,SAEjCrB,EAAY,EACLjJ,EAAMtC,GAGf,SAASkN,EAAa7J,GAChBgI,IAAYA,EAAW3F,KAAOrC,GAClCgI,EAAahI,EACb+H,EAAUoB,KAAOrB,GAAiBA,EAAcqB,KAChDpB,EAAUzF,WAAWtC,EAAMf,OAC3B8I,EAAUtF,MAAM/D,EAAK3C,YAAYiE,IAGnC,SAAS4J,EAAe1I,EAAMhC,GAC5B,IAAIjC,EAAQgL,EAAMnM,OAOlB,IALIiM,GAAa7I,IACf6I,EAAUtF,MAAM,CAAC,OACjBuF,EAAaD,OAAYrK,GAGpBT,KAAUiE,GACfxC,EAAK4J,eAAiBL,EAAMhL,GAAO,GACnCgL,EAAMhL,GAAO,GAAGqC,KAAKsB,KAAKlC,EAAMlC,GAGlCyL,EAAMnM,OAASoF,IA7Hf8H,EAAqB,CACvBzM,SA4MF,SAA2BC,EAASC,EAAIC,GACtC,OAAOL,EACLG,EACAA,EAAQgD,QAAQb,KAAKI,OAAOlC,WAAWsK,SAAU1K,EAAIC,GACrD,aACAiC,KAAKI,OAAOlC,WAAWkN,QAAQxJ,KAAKpD,QAAQ,iBAAmB,OAC3DO,EACA,KAjNJ0L,EAAoB,CACtB7M,SAoNF,SAA0BC,EAASC,EAAIC,GACrC,OAAOL,EACLG,EACAA,EAAQ2M,KAAKxK,KAAKI,OAAOlC,WAAWuK,KAAM3K,EAAIC,GAC9C,aACAiC,KAAKI,OAAOlC,WAAWkN,QAAQxJ,KAAKpD,QAAQ,iBAAmB,OAC3DO,EACA,KAIRlC,EAAQe,SAAWA,G,iCC1OnBjB,OAAOiI,eAAe/H,EAAS,aAAc,CAAC8B,OAAO,IAErD,IAAI4J,EAAUxL,EAAQ,KAClBW,EAAeX,EAAQ,GACvBY,EAAmBZ,EAAQ,IAE3Ba,EAEJ,SAAwBC,GACtB,IAAIkC,EAAOC,KACPqL,EAAUxN,EAAQgD,QAEpBlD,GAkBF,SAAuBK,GACrB,GAAa,OAATA,EAEF,YADAH,EAAQ6C,QAAQ1C,GAQlB,OAJAH,EAAQ4C,MAAM,mBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,mBACbZ,EAAKgK,sBAAmBhL,EACjBsM,IA1BPxN,EAAQgD,QACNb,KAAKI,OAAOlC,WAAWoN,YACvBC,EACA7N,EACEG,EACAA,EAAQgD,QACNb,KAAKI,OAAOlC,WAAWuK,KACvB8C,EACA1N,EAAQgD,QAAQ0H,EAASgD,IAE3B,gBAIN,OAAOF,EAeP,SAASE,EAAevN,GACtB,GAAa,OAATA,EASJ,OAJAH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACbZ,EAAKgK,sBAAmBhL,EACjBsM,EARLxN,EAAQ6C,QAAQ1C,KAYtBnB,EAAQe,SAAWA,G,iCCzDnB,IAAIH,EAAqBV,EAAQ,GAC7ByO,EAAazO,EAAQ,IACrB0O,EAAc1O,EAAQ,IACtBW,EAAeX,EAAQ,GAGvBwL,EAAU,CACZ3K,SAgBF,SAAyBC,EAASC,GAChC,IAAIiF,EACJ,OAEA,SAAe/E,GAKb,OAJAH,EAAQ4C,MAAM,WACdsC,EAAWlF,EAAQ4C,MAAM,eAAgB,CACvC6C,YAAa,YAER8B,EAAKpH,IAGd,SAASoH,EAAKpH,GACZ,OAAa,OAATA,EACK0N,EAAW1N,GAGhBP,EAAmBO,GACdH,EAAQ6M,MACbiB,EACAC,EACAF,EAHK7N,CAILG,IAGJH,EAAQ6C,QAAQ1C,GACToH,GAGT,SAASsG,EAAW1N,GAGlB,OAFAH,EAAQ8C,KAAK,gBACb9C,EAAQ8C,KAAK,WACN7C,EAAGE,GAGZ,SAAS4N,EAAgB5N,GAOvB,OANAH,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,gBACboC,EAAWA,EAASW,KAAO7F,EAAQ4C,MAAM,eAAgB,CACvD6C,YAAa,UACbP,SAAUA,IAELqC,IAzDThH,QAUF,SAAwBpB,GAEtB,OADAyO,EAAYzO,GACLA,GAXPoN,eAAe,EACfI,MAAM,GAEJmB,EAAwB,CAC1B/N,SAwDF,SAA8BC,EAASC,EAAIC,GACzC,IAAIgC,EAAOC,KACX,OAEA,SAAwBhC,GAItB,OAHAH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACNjD,EAAaG,EAASgO,EAAU,eAGzC,SAASA,EAAS7N,GAChB,OAAa,OAATA,GAAiBP,EAAmBO,GAC/BD,EAAIC,GAIX+B,EAAKK,OAAOlC,WAAWkN,QAAQxJ,KAAKpD,QAAQ,iBAAmB,GAC/DgN,EAAWzL,EAAK/C,OAAQ,cAAgB,EAEjCa,EAAQsM,UAAUpK,EAAKK,OAAOlC,WAAWuK,KAAM1K,EAAKD,EAApDD,CAAwDG,GAG1DF,EAAGE,KA9EZC,SAAS,GAkFXrB,EAAOC,QAAU0L,G,iCChGjB,IAAIzG,EAAS,GAAGA,OAEhBlF,EAAOC,QAAUiF,G,iCCFjB,IAAIpF,EAASK,EAAQ,IACjBU,EAAqBV,EAAQ,GAC7BqC,EAAcrC,EAAQ,IACtBiC,EAAgBjC,EAAQ,GACxB+I,EAAW/I,EAAQ,IACnBwB,EAAaxB,EAAQ,IACrB+O,EAAkB/O,EAAQ,KAC1BuC,EAAUvC,EAAQ,GAClBgP,EAAchP,EAAQ,KAiT1BH,EAAOC,QAxSP,SAAyBuD,EAAQ4L,EAAY7D,GAC3C,IAAI8D,EAAQ9D,EACR7I,EAAQ6I,GACR,CACEpE,KAAM,EACN4B,OAAQ,EACRlE,OAAQ,GAEVyK,EAAc,GACdC,EAAuB,GACvBxJ,EAAS,GACT2G,EAAQ,GAERzL,EAAU,CACZ6C,QAyGF,SAAiB1C,GACXP,EAAmBO,IACrBiO,EAAMlI,OACNkI,EAAMtG,OAAS,EACfsG,EAAMxK,SAAoB,IAAVzD,EAAc,EAAI,EAClCoO,MACmB,IAAVpO,IACTiO,EAAMtG,SACNsG,EAAMxK,UAGJwK,EAAMpG,aAAe,EACvBoG,EAAMrG,UAENqG,EAAMpG,eAEFoG,EAAMpG,eAAiBlD,EAAOsJ,EAAMrG,QAAQzI,SAC9C8O,EAAMpG,cAAgB,EACtBoG,EAAMrG,WAIVzH,EAAQ4E,SAAW/E,GA9HnByC,MAiIF,SAAexD,EAAMoP,GACnB,IAAIhL,EAAQgL,GAAU,GAKtB,OAJAhL,EAAMpE,KAAOA,EACboE,EAAMf,MAAQE,IACdrC,EAAQnB,OAAOyB,KAAK,CAAC,QAAS4C,EAAOlD,IACrCmL,EAAM7K,KAAK4C,GACJA,GAtIPV,KAyIF,SAAc1D,GACZ,IAAIoE,EAAQiI,EAAMrF,MAGlB,OAFA5C,EAAMd,IAAMC,IACZrC,EAAQnB,OAAOyB,KAAK,CAAC,OAAQ4C,EAAOlD,IAC7BkD,GA5IPR,QAASyL,GA+IX,SAA+BC,EAAWC,GACxCC,EAAUF,EAAWC,EAAKrE,SA/I1BuC,MAAO4B,EAAiBI,GACxBvC,UAAWmC,EAAiBI,EAAmB,CAC7CvC,WAAW,IAEbK,KAAM8B,EAAiBI,EAAmB,CACxClC,MAAM,KAINrM,EAAU,CACZ4E,SAAU,KACV/F,OAAQ,GACRoD,OAAQA,EACRhD,YAAaA,EACbiD,eAgCF,SAAwBgB,GACtB,OAAOyK,EAAgB1O,EAAYiE,KAhCnCb,IAAKA,EACLmD,WA0CF,SAAchF,GACZuN,EAAYvN,EAAMoF,MAAQpF,EAAMgH,OAChCyG,KA3CAtI,MAaF,SAAepC,GAIb,GAHAiB,EAASvD,EAAYuD,EAAQjB,GAC7BiL,IAEkC,OAA9BhK,EAAOA,EAAOxF,OAAS,GACzB,MAAO,GAMT,OAHAsP,EAAUT,EAAY,GAEtB7N,EAAQnB,OAASuB,EAAW4N,EAAsBhO,EAAQnB,OAAQmB,GAC3DA,EAAQnB,SArBb4P,EAAQZ,EAAWpO,SAASqE,KAAK9D,EAASN,GAQ9C,OANImO,EAAWzN,YACb4N,EAAqB1N,KAAKuN,GAG5BC,EAAMrG,OAAS,EACfqG,EAAMpG,cAAgB,EACf1H,EAsBP,SAASf,EAAYiE,GACnB,OAAO0K,EAAYpJ,EAAQtB,GAG7B,SAASb,IACP,OAAOlB,EAAQ2M,GAgBjB,SAASU,IAIP,IAHA,IAAIE,EACAtH,EAEG0G,EAAMrG,OAASjD,EAAOxF,QAG3B,GAAqB,kBAFrBoI,EAAQ5C,EAAOsJ,EAAMrG,SASnB,IANAiH,EAAaZ,EAAMrG,OAEfqG,EAAMpG,aAAe,IACvBoG,EAAMpG,aAAe,GAIrBoG,EAAMrG,SAAWiH,GACjBZ,EAAMpG,aAAeN,EAAMpI,QAE3B2P,EAAGvH,EAAMG,WAAWuG,EAAMpG,oBAG5BiH,EAAGvH,GAKT,SAASuH,EAAG9O,GACV4O,EAAQA,EAAM5O,GAgDhB,SAAS0O,EAAkBH,EAAWC,GACpCA,EAAKO,UAGP,SAAST,EAAiBU,EAAUX,GAClC,OAGA,SAAcnO,EAAY+O,EAAaC,GACrC,IAAIC,EACAC,EACArD,EACAyC,EACJ,OAAOtO,EAAWN,UAAY,WAAYM,EACtCmP,EAAuBvH,EAAS5H,IAGpC,SAA+BF,GAC7B,GAAIA,KAAQE,GAAc,QAAQA,EAChC,OAAOmP,EACLnP,EAAW0D,KAEPkE,EAAS5H,EAAWF,IAAO6K,OAAO/C,EAAS5H,EAAW0D,OACtD1D,EAAWF,GAJVqP,CAKLrP,GAGJ,OAAOkP,EAAWlP,IAGpB,SAASqP,EAAuBpO,GAG9B,OAFAkO,EAAmBlO,EAEZqO,EAAgBrO,EADvBmO,EAAiB,IAInB,SAASE,EAAgBf,GACvB,OAEA,SAAevO,GAKbwO,EA2DR,WACE,IAAIe,EAAa/M,IACbgN,EAAgBrP,EAAQ4E,SACxB0K,EAAwBtP,EAAQ4L,iBAChC2D,EAAmBvP,EAAQnB,OAAOG,OAClCwQ,EAAazF,MAAMC,KAAKmB,GAC5B,MAAO,CACLyD,QAASA,EACT5E,KAAMuF,GAGR,SAASX,IACPd,EAAQsB,EACRpP,EAAQ4E,SAAWyK,EACnBrP,EAAQ4L,iBAAmB0D,EAC3BtP,EAAQnB,OAAOG,OAASuQ,EACxBpE,EAAQqE,EACRvB,KA5EWwB,GACP7D,EAAmBwC,EAEdA,EAAUtO,UACbE,EAAQ4L,iBAAmBwC,GAG7B,GACEA,EAAU3M,MACVzB,EAAQiC,OAAOlC,WAAWkN,QAAQxJ,KAAKpD,QAAQ+N,EAAU3M,OAAS,EAElE,OAAO7B,IAGT,OAAOwO,EAAU3O,SAASqE,KACxBoK,EAAS3P,EAAO,GAAIyB,EAASkO,GAAUlO,EACvCN,EACAC,EACAC,EAJKwO,CAKLvO,IAIN,SAASF,EAAGE,GAEV,OADAgP,EAASjD,EAAkByC,GACpBS,EAGT,SAASlP,EAAIC,GAGX,OAFAwO,EAAKO,YAECK,EAAiBD,EAAiBhQ,OAC/BmQ,EAAgBH,EAAiBC,IAGnCF,IAKb,SAAST,EAAUF,EAAWpE,GACxBoE,EAAUhO,YAAc4N,EAAqB3N,QAAQ+N,GAAa,GACpEJ,EAAqB1N,KAAK8N,GAGxBA,EAAUnO,SACZY,EACEb,EAAQnB,OACRmL,EACAhK,EAAQnB,OAAOG,OAASgL,EACxBoE,EAAUnO,QAAQD,EAAQnB,OAAO0E,MAAMyG,GAAOhK,IAI9CoO,EAAUtL,YACZ9C,EAAQnB,OAASuP,EAAUtL,UAAU9C,EAAQnB,OAAQmB,IAyBzD,SAASiO,IACHH,EAAMlI,QAAQmI,GAAeD,EAAMtG,OAAS,IAC9CsG,EAAMtG,OAASuG,EAAYD,EAAMlI,MACjCkI,EAAMxK,QAAUyK,EAAYD,EAAMlI,MAAQ,M,iCCpThD,IAAIxG,EAAeR,EAAQ,IAqC3BH,EAAOC,QAnCP,SAAyB8F,GAOvB,IANA,IAEI4C,EACA5G,EACAkP,EAJAvP,GAAS,EACTwP,EAAS,KAKJxP,EAAQqE,EAAOxF,QAAQ,CAG9B,GAAqB,kBAFrBoI,EAAQ5C,EAAOrE,IAGbK,EAAQ4G,OACH,IAAe,IAAXA,EACT5G,EAAQ,UACH,IAAe,IAAX4G,EACT5G,EAAQ,UACH,IAAe,IAAX4G,EACT5G,EAAQ,YACH,IAAe,IAAX4G,EACT5G,EAAQ,UACH,IAAe,IAAX4G,EAAc,CACvB,GAAIsI,EAAO,SACXlP,EAAQ,SAGRA,EAAQpB,EAAagI,GAGvBsI,GAAmB,IAAXtI,EACRuI,EAAOrP,KAAKE,GAGd,OAAOmP,EAAOC,KAAK,M,iCCVrBnR,EAAOC,QAxBP,SAAqB8F,EAAQtB,GAC3B,IAII2M,EAJAC,EAAa5M,EAAMf,MAAMsF,OACzBsI,EAAmB7M,EAAMf,MAAMuF,aAC/BsI,EAAW9M,EAAMd,IAAIqF,OACrBwI,EAAiB/M,EAAMd,IAAIsF,aAiB/B,OAdIoI,IAAeE,EACjBH,EAAO,CAACrL,EAAOsL,GAAYvM,MAAMwM,EAAkBE,KAEnDJ,EAAOrL,EAAOjB,MAAMuM,EAAYE,GAE5BD,GAAoB,IACtBF,EAAK,GAAKA,EAAK,GAAGtM,MAAMwM,IAGtBE,EAAiB,GACnBJ,EAAKvP,KAAKkE,EAAOwL,GAAUzM,MAAM,EAAG0M,KAIjCJ,I,iCCrBTrR,OAAOiI,eAAe/H,EAAS,aAAc,CAAC8B,OAAO,IAErD,IAAI0P,EAAStR,EAAQ,IACjBuR,EAAYvR,EAAQ,KACpBwR,EAAWxR,EAAQ,KACnByR,EAAazR,EAAQ,KACrB0R,EAAkB1R,EAAQ,KAC1B2R,EAAqB3R,EAAQ,KAC7B4R,EAAa5R,EAAQ,KACrB6R,EAAe7R,EAAQ,KACvB8R,EAAW9R,EAAQ,KACnB+R,EAAa/R,EAAQ,KACrBgS,EAAkBhS,EAAQ,KAC1BiS,EAAajS,EAAQ,KACrBkS,EAAWlS,EAAQ,KACnBmS,EAAWnS,EAAQ,KACnB4C,EAAW5C,EAAQ,IACnBoS,EAAkBpS,EAAQ,KAC1BqS,EAAiBrS,EAAQ,KACzBsS,EAAatS,EAAQ,KACrBkC,EAAOlC,EAAQ,KACfuS,EAAkBvS,EAAQ,KAC1B+K,EAAgB/K,EAAQ,IAExByL,EAAW,CACb+G,GAAItQ,EAEJuQ,GAAIvQ,EAEJwQ,GAAIxQ,EAEJyQ,GAAIzQ,EAEJ0Q,GAAI1Q,EAEJ2Q,GAAI3Q,EAEJ4Q,GAAI5Q,EAEJ6Q,GAAI7Q,EAEJ8Q,GAAI9Q,EAEJ+Q,GAAI/Q,EAEJgR,GAAIhR,EAEJiR,GAAIjR,EAEJkR,GAAIlR,EAEJmR,GAAI5B,GAEFvF,EAAiB,CACnBoH,GAAIvB,GAEFxD,EAAc,CAChB,KAAMsD,EAEN,KAAMA,EAEN0B,GAAI1B,GAEFnG,EAAO,CACT8H,GAAIvB,EAEJO,GAAIzH,EAEJ2H,GAAI,CAACH,EAAiBxH,GAEtB0I,GAAIvB,EAEJwB,GAAInB,EAEJoB,GAAI5I,EAEJ6I,GAAIhC,EAEJiC,IAAKjC,GAEH7J,EAAS,CACX+L,GAAInC,EAEJoC,GAAIrC,GAEFrN,EAAO,CACT,KAAMiO,EAEN,KAAMA,EAEN,KAAMA,EAEN0B,GAAI5B,EAEJ0B,GAAInC,EAEJa,GAAIjB,EAEJkC,GAAI,CAACjC,EAAUW,GAEfmB,GAAIjB,EAEJ0B,GAAI,CAAC/B,EAAiBN,GAEtBuC,GAAIrR,EAEJ+Q,GAAIpC,EAEJqC,GAAI9B,GAEFlN,EAAa,CACfC,KAAM,CAAC0M,EAAWD,EAAOtJ,WAM3BlI,EAAQoM,eAAiBA,EACzBpM,EAAQuO,QALM,CACZxJ,KAAM,IAKR/E,EAAQ2L,SAAWA,EACnB3L,EAAQ4L,KAAOA,EACf5L,EAAQyO,YAAcA,EACtBzO,EAAQ8E,WAAaA,EACrB9E,EAAQiI,OAASA,EACjBjI,EAAQuE,KAAOA,G,iCC5Hf,IAAIhC,EAAcrC,EAAQ,IACtBiC,EAAgBjC,EAAQ,GACxBkU,EAAoBlU,EAAQ,IAC5BmU,EAAYnU,EAAQ,KACpBwB,EAAaxB,EAAQ,IACrBuC,EAAUvC,EAAQ,GAElBuR,EAAY,CACd1O,KAAM,YACNhC,SA8IF,SAA2BC,EAASC,GAClC,IACI2J,EADApB,EAAS4K,EAAkBjR,KAAK+C,UAEpC,OAEA,SAAe/E,GAGb,OAFAH,EAAQ4C,MAAM,qBACdgH,EAASzJ,EACF+J,EAAS/J,IAGlB,SAAS+J,EAAS/J,GAChB,IAAIqD,EACA8P,EACA7P,EACAC,EAEJ,OAAIvD,IAASyJ,GACX5J,EAAQ6C,QAAQ1C,GACT+J,IAGT1G,EAAQxD,EAAQ8C,KAAK,qBAErBW,IADA6P,EAAQF,EAAkBjT,KACE,IAAVmT,GAAe9K,EACjC9E,GAAS8E,GAAsB,IAAXA,GAAgB8K,EACpC9P,EAAM+P,MAAmB,KAAX3J,EAAgBnG,EAAOA,IAAS+E,IAAW9E,GACzDF,EAAMgQ,OAAoB,KAAX5J,EAAgBlG,EAAQA,IAAU4P,IAAU7P,GACpDxD,EAAGE,MAzKZO,WAGF,SAA6BvB,EAAQmB,GACnC,IACImD,EACAJ,EACAE,EACAkQ,EACAC,EACAC,EACAC,EACAhQ,EARAnD,GAAS,EAab,OAASA,EAAQtB,EAAOG,QAEtB,GACuB,UAArBH,EAAOsB,GAAO,IACY,sBAA1BtB,EAAOsB,GAAO,GAAGrB,MACjBD,EAAOsB,GAAO,GAAG+S,OAIjB,IAFA/P,EAAOhD,EAEAgD,KAEL,GACsB,SAApBtE,EAAOsE,GAAM,IACY,sBAAzBtE,EAAOsE,GAAM,GAAGrE,MAChBD,EAAOsE,GAAM,GAAG8P,OAChBjT,EAAQkC,eAAerD,EAAOsE,GAAM,IAAIoE,WAAW,KACjDvH,EAAQkC,eAAerD,EAAOsB,GAAO,IAAIoH,WAAW,GACtD,CAKA,IACG1I,EAAOsE,GAAM,GAAG+P,QAAUrU,EAAOsB,GAAO,GAAG8S,SAC3CpU,EAAOsB,GAAO,GAAGiC,IAAIkB,OAASzE,EAAOsB,GAAO,GAAGgC,MAAMmB,QAAU,MAE7DzE,EAAOsE,GAAM,GAAGf,IAAIkB,OACnBzE,EAAOsE,GAAM,GAAGhB,MAAMmB,OACtBzE,EAAOsB,GAAO,GAAGiC,IAAIkB,OACrBzE,EAAOsB,GAAO,GAAGgC,MAAMmB,QACzB,GAGF,SAGF+P,EACExU,EAAOsE,GAAM,GAAGf,IAAIkB,OAASzE,EAAOsE,GAAM,GAAGhB,MAAMmB,OAAS,GAC5DzE,EAAOsB,GAAO,GAAGiC,IAAIkB,OAASzE,EAAOsB,GAAO,GAAGgC,MAAMmB,OAAS,EAC1D,EACA,EACN6P,EAAkB,CAChBrU,KAAMuU,EAAM,EAAI,iBAAmB,mBACnClR,MAAO4Q,EAAU5R,EAAQtC,EAAOsE,GAAM,GAAGf,MAAOiR,GAChDjR,IAAKjB,EAAQtC,EAAOsE,GAAM,GAAGf,MAE/BgR,EAAkB,CAChBtU,KAAMuU,EAAM,EAAI,iBAAmB,mBACnClR,MAAOhB,EAAQtC,EAAOsB,GAAO,GAAGgC,OAChCC,IAAK2Q,EAAU5R,EAAQtC,EAAOsB,GAAO,GAAGgC,OAAQkR,IAElDpQ,EAAO,CACLnE,KAAMuU,EAAM,EAAI,aAAe,eAC/BlR,MAAOhB,EAAQtC,EAAOsE,GAAM,GAAGf,KAC/BA,IAAKjB,EAAQtC,EAAOsB,GAAO,GAAGgC,QAEhCY,EAAQ,CACNjE,KAAMuU,EAAM,EAAI,SAAW,WAC3BlR,MAAOhB,EAAQgS,EAAgBhR,OAC/BC,IAAKjB,EAAQiS,EAAgBhR,MAE/BvD,EAAOsE,GAAM,GAAGf,IAAMjB,EAAQgS,EAAgBhR,OAC9CtD,EAAOsB,GAAO,GAAGgC,MAAQhB,EAAQiS,EAAgBhR,KACjDkR,EAAa,GAETzU,EAAOsE,GAAM,GAAGf,IAAIkB,OAASzE,EAAOsE,GAAM,GAAGhB,MAAMmB,SACrDgQ,EAAarS,EAAYqS,EAAY,CACnC,CAAC,QAASzU,EAAOsE,GAAM,GAAInD,GAC3B,CAAC,OAAQnB,EAAOsE,GAAM,GAAInD,MAI9BsT,EAAarS,EAAYqS,EAAY,CACnC,CAAC,QAASvQ,EAAO/C,GACjB,CAAC,QAASmT,EAAiBnT,GAC3B,CAAC,OAAQmT,EAAiBnT,GAC1B,CAAC,QAASiD,EAAMjD,KAGlBsT,EAAarS,EACXqS,EACAlT,EACEJ,EAAQiC,OAAOlC,WAAWyD,WAAWC,KACrC5E,EAAO0E,MAAMJ,EAAO,EAAGhD,GACvBH,IAIJsT,EAAarS,EAAYqS,EAAY,CACnC,CAAC,OAAQrQ,EAAMjD,GACf,CAAC,QAASoT,EAAiBpT,GAC3B,CAAC,OAAQoT,EAAiBpT,GAC1B,CAAC,OAAQ+C,EAAO/C,KAGdnB,EAAOsB,GAAO,GAAGiC,IAAIkB,OAASzE,EAAOsB,GAAO,GAAGgC,MAAMmB,QACvDA,EAAS,EACTgQ,EAAarS,EAAYqS,EAAY,CACnC,CAAC,QAASzU,EAAOsB,GAAO,GAAIH,GAC5B,CAAC,OAAQnB,EAAOsB,GAAO,GAAIH,MAG7BsD,EAAS,EAGXzC,EAAchC,EAAQsE,EAAO,EAAGhD,EAAQgD,EAAO,EAAGmQ,GAClDnT,EAAQgD,EAAOmQ,EAAWtU,OAASsE,EAAS,EAC5C,MAMRnD,GAAS,EAET,OAASA,EAAQtB,EAAOG,QACQ,sBAA1BH,EAAOsB,GAAO,GAAGrB,OACnBD,EAAOsB,GAAO,GAAGrB,KAAO,QAI5B,OAAOD,IAmCTJ,EAAOC,QAAUyR,G,iCC/KjB1R,EAAOC,QAFkB,ovC,iCCGzBD,EAAOC,QAPP,SAAmBoP,EAAOxK,GAIxB,OAHAwK,EAAMtG,QAAUlE,EAChBwK,EAAMxK,QAAUA,EAChBwK,EAAMpG,cAAgBpE,EACfwK,I,iCCNT,IAAIvN,EAAa3B,EAAQ,IACrBM,EAAoBN,EAAQ,IAC5B2U,EAAa3U,EAAQ,KACrB4J,EAAe5J,EAAQ,IAEvBwR,EAAW,CACb3O,KAAM,WACNhC,SAGF,SAA0BC,EAASC,EAAIC,GACrC,IAAIwE,EAAO,EACX,OAEA,SAAevE,GAMb,OALAH,EAAQ4C,MAAM,YACd5C,EAAQ4C,MAAM,kBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,kBACb9C,EAAQ4C,MAAM,oBACPa,GAGT,SAASA,EAAKtD,GACZ,OAAIU,EAAWV,IACbH,EAAQ6C,QAAQ1C,GACT2T,GAGFD,EAAW1T,GAAQ4T,EAAW5T,GAAQD,EAAIC,GAGnD,SAAS2T,EAAmB3T,GAC1B,OAAgB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAeX,EAAkBW,GAClE6T,EAAyB7T,GACzB4T,EAAW5T,GAGjB,SAAS6T,EAAyB7T,GAChC,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACT8T,IAIG,KAAT9T,GAAwB,KAATA,GAAwB,KAATA,GAAeX,EAAkBW,KAChEuE,IAAS,IAET1E,EAAQ6C,QAAQ1C,GACT6T,GAGFD,EAAW5T,GAGpB,SAAS8T,EAAU9T,GACjB,OAAa,KAATA,GACFH,EAAQ8C,KAAK,oBACNJ,EAAIvC,IAGA,KAATA,GAAwB,KAATA,GAAe2I,EAAa3I,GACtCD,EAAIC,IAGbH,EAAQ6C,QAAQ1C,GACT8T,GAGT,SAASF,EAAW5T,GAClB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GAChBuE,EAAO,EACAwP,GAGLL,EAAW1T,IACbH,EAAQ6C,QAAQ1C,GACT4T,GAGF7T,EAAIC,GAGb,SAAS+T,EAAiB/T,GACxB,OAAOX,EAAkBW,GAAQgU,EAAWhU,GAAQD,EAAIC,GAG1D,SAASgU,EAAWhU,GAClB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GAChBuE,EAAO,EACAwP,GAGI,KAAT/T,GAEFH,EAAQ8C,KAAK,oBAAoB1D,KAAO,gBACjCsD,EAAIvC,IAGNiU,EAAWjU,GAGpB,SAASiU,EAAWjU,GAClB,OAAc,KAATA,GAAeX,EAAkBW,KAAUuE,IAAS,IACvD1E,EAAQ6C,QAAQ1C,GACA,KAATA,EAAciU,EAAaD,GAG7BjU,EAAIC,GAGb,SAASuC,EAAIvC,GAKX,OAJAH,EAAQ4C,MAAM,kBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,kBACb9C,EAAQ8C,KAAK,YACN7C,KAIXlB,EAAOC,QAAU0R,G,iCC1HjB,IAEImD,EAFa3U,EAAQ,EAERO,CAAW,uBAE5BV,EAAOC,QAAU6U,G,iCCJjB,IAAIvP,EAAgBpF,EAAQ,GACxBW,EAAeX,EAAQ,GAEvByR,EAAa,CACf5O,KAAM,aACNhC,SAOF,SAAiCC,EAASC,EAAIC,GAC5C,IAAIgC,EAAOC,KACX,OAEA,SAAehC,GACb,GAAa,KAATA,EAYF,OAXK+B,EAAK4J,eAAerI,OACvBzD,EAAQ4C,MAAM,aAAc,CAC1BiE,YAAY,IAEd3E,EAAK4J,eAAerI,MAAO,GAG7BzD,EAAQ4C,MAAM,oBACd5C,EAAQ4C,MAAM,oBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,oBACNwQ,EAGT,OAAOpT,EAAIC,IAGb,SAASmT,EAAMnT,GACb,OAAImE,EAAcnE,IAChBH,EAAQ4C,MAAM,8BACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,8BACb9C,EAAQ8C,KAAK,oBACN7C,IAGTD,EAAQ8C,KAAK,oBACN7C,EAAGE,MAvCZ4L,aAAc,CACZhM,SA0CJ,SAAwCC,EAASC,EAAIC,GACnD,OAAOL,EACLG,EACAA,EAAQgD,QAAQ2N,EAAY1Q,EAAIC,GAChC,aACAiC,KAAKI,OAAOlC,WAAWkN,QAAQxJ,KAAKpD,QAAQ,iBAAmB,OAC3DO,EACA,KA/CN4B,KAmDF,SAAc9C,GACZA,EAAQ8C,KAAK,gBAGf/D,EAAOC,QAAU2R,G,iCChEjB,IAAI0D,EAAmBnV,EAAQ,KAE3B0R,EAAkB,CACpB7O,KAAM,kBACNhC,SAGF,SAAiCC,EAASC,EAAIC,GAC5C,OAEA,SAAeC,GAKb,OAJAH,EAAQ4C,MAAM,mBACd5C,EAAQ4C,MAAM,gBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,gBACNW,GAGT,SAASA,EAAKtD,GACZ,OAAIkU,EAAiBlU,IACnBH,EAAQ4C,MAAM,wBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,wBACb9C,EAAQ8C,KAAK,mBACN7C,GAGFC,EAAIC,MAIfpB,EAAOC,QAAU4R,G,iCC/BjB,IAEIyD,EAFanV,EAAQ,EAEFO,CAAW,kBAElCV,EAAOC,QAAUqV,G,iCCJjB,IAAIC,EAAepV,EAAQ,IACvBM,EAAoBN,EAAQ,IAC5B2J,EAAa3J,EAAQ,IACrBqV,EAAgBrV,EAAQ,KAE5B,SAASsV,EAAsBC,GAC7B,OAAOA,GAAkB,kBAANA,GAAkB,YAAaA,EAAIA,EAAI,CAACC,QAASD,GAGtE,IAAIE,EAAsCH,EAAsBF,GAE5DzD,EAAqB,CACvB9O,KAAM,qBACNhC,SAGF,SAAoCC,EAASC,EAAIC,GAC/C,IAEIqE,EACAqQ,EAHA1S,EAAOC,KACPuC,EAAO,EAGX,OAEA,SAAevE,GAKb,OAJAH,EAAQ4C,MAAM,sBACd5C,EAAQ4C,MAAM,4BACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,4BACNW,GAGT,SAASA,EAAKtD,GACZ,OAAa,KAATA,GACFH,EAAQ4C,MAAM,mCACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,mCACN+R,IAGT7U,EAAQ4C,MAAM,2BACd2B,EAAM,GACNqQ,EAAOpV,EACAsB,EAAMX,IAGf,SAAS0U,EAAQ1U,GACf,OAAa,KAATA,GAAwB,MAATA,GACjBH,EAAQ4C,MAAM,uCACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,uCACb9C,EAAQ4C,MAAM,2BACd2B,EAAM,EACNqQ,EAAOL,EACAzT,IAGTd,EAAQ4C,MAAM,2BACd2B,EAAM,EACNqQ,EAAO/L,EACA/H,EAAMX,IAGf,SAASW,EAAMX,GACb,IAAIqD,EAEJ,OAAa,KAATrD,GAAeuE,GACjBlB,EAAQxD,EAAQ8C,KAAK,2BAGnB8R,IAASpV,GACRmV,EAAqB,QAAYzS,EAAKM,eAAegB,KAKxDxD,EAAQ4C,MAAM,4BACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,4BACb9C,EAAQ8C,KAAK,sBACN7C,GAPEC,EAAIC,IAUXyU,EAAKzU,IAASuE,IAASH,GACzBvE,EAAQ6C,QAAQ1C,GACTW,GAGFZ,EAAIC,MAIfpB,EAAOC,QAAU6R,G,iCC3FjB,IAEI0D,EAFarV,EAAQ,EAELO,CAAW,cAE/BV,EAAOC,QAAUuV,G,iCCJjB,IAAI3U,EAAqBV,EAAQ,GAC7BoC,EAA4BpC,EAAQ,GACpCyO,EAAazO,EAAQ,IACrBW,EAAeX,EAAQ,GAEvB4R,EAAa,CACf/O,KAAM,aACNhC,SAIF,SAA4BC,EAASC,EAAIC,GACvC,IAOI0J,EAPA1H,EAAOC,KACP2S,EAAwB,CAC1B/U,SAuHF,SAA8BC,EAASC,EAAIC,GACzC,IAAIwE,EAAO,EACX,OAAO7E,EACLG,EACA+U,EACA,aACA5S,KAAKI,OAAOlC,WAAWkN,QAAQxJ,KAAKpD,QAAQ,iBAAmB,OAC3DO,EACA,GAGN,SAAS6T,EAAqB5U,GAG5B,OAFAH,EAAQ4C,MAAM,mBACd5C,EAAQ4C,MAAM,2BACP8Q,EAAgBvT,GAGzB,SAASuT,EAAgBvT,GACvB,OAAIA,IAASyJ,GACX5J,EAAQ6C,QAAQ1C,GAChBuE,IACOgP,GAGLhP,EAAOsQ,EAAiB9U,EAAIC,IAChCH,EAAQ8C,KAAK,2BACNjD,EAAaG,EAASiV,EAAoB,aAA1CpV,CAAwDM,IAGjE,SAAS8U,EAAmB9U,GAC1B,OAAa,OAATA,GAAiBP,EAAmBO,IACtCH,EAAQ8C,KAAK,mBACN7C,EAAGE,IAGLD,EAAIC,KAzJbC,SAAS,GAEP8U,EAAgBvH,EAAWxL,KAAKhD,OAAQ,cACxC6V,EAAW,EAEf,OAEA,SAAe7U,GAKb,OAJAH,EAAQ4C,MAAM,cACd5C,EAAQ4C,MAAM,mBACd5C,EAAQ4C,MAAM,2BACdgH,EAASzJ,EACFgV,EAAahV,IAGtB,SAASgV,EAAahV,GACpB,OAAIA,IAASyJ,GACX5J,EAAQ6C,QAAQ1C,GAChB6U,IACOG,IAGTnV,EAAQ8C,KAAK,2BACNkS,EAAW,EACd9U,EAAIC,GACJN,EAAaG,EAASoV,EAAU,aAAhCvV,CAA8CM,IAGpD,SAASiV,EAASjV,GAChB,OAAa,OAATA,GAAiBP,EAAmBO,GAC/BkV,EAAUlV,IAGnBH,EAAQ4C,MAAM,uBACd5C,EAAQ4C,MAAM,cAAe,CAC3B6C,YAAa,WAERkJ,EAAKxO,IAGd,SAASwO,EAAKxO,GACZ,OAAa,OAATA,GAAiBmB,EAA0BnB,IAC7CH,EAAQ8C,KAAK,eACb9C,EAAQ8C,KAAK,uBACNjD,EAAaG,EAASsV,EAAW,aAAjCzV,CAA+CM,IAG3C,KAATA,GAAeA,IAASyJ,EAAe1J,EAAIC,IAC/CH,EAAQ6C,QAAQ1C,GACTwO,GAGT,SAAS2G,EAAUnV,GACjB,OAAa,OAATA,GAAiBP,EAAmBO,GAC/BkV,EAAUlV,IAGnBH,EAAQ4C,MAAM,uBACd5C,EAAQ4C,MAAM,cAAe,CAC3B6C,YAAa,WAER8P,EAAKpV,IAGd,SAASoV,EAAKpV,GACZ,OAAa,OAATA,GAAiBP,EAAmBO,IACtCH,EAAQ8C,KAAK,eACb9C,EAAQ8C,KAAK,uBACNuS,EAAUlV,IAGN,KAATA,GAAeA,IAASyJ,EAAe1J,EAAIC,IAC/CH,EAAQ6C,QAAQ1C,GACToV,GAGT,SAASF,EAAUlV,GAEjB,OADAH,EAAQ8C,KAAK,mBACNZ,EAAKoK,UAAYrM,EAAGE,GAAQuK,EAAQvK,GAG7C,SAASuK,EAAQvK,GACf,OAAa,OAATA,EACKmT,EAAMnT,GAGXP,EAAmBO,IACrBH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACN9C,EAAQgD,QACb8R,EACAxB,EACA4B,EACIrV,EAAaG,EAAS0K,EAAS,aAAcwK,EAAgB,GAC7DxK,KAIR1K,EAAQ4C,MAAM,iBACPmL,EAAgB5N,IAGzB,SAAS4N,EAAgB5N,GACvB,OAAa,OAATA,GAAiBP,EAAmBO,IACtCH,EAAQ8C,KAAK,iBACN4H,EAAQvK,KAGjBH,EAAQ6C,QAAQ1C,GACT4N,GAGT,SAASuF,EAAMnT,GAEb,OADAH,EAAQ8C,KAAK,cACN7C,EAAGE,KA1HZgM,UAAU,GAqKZpN,EAAOC,QAAU8R,G,iCC7KjB,IAAIlR,EAAqBV,EAAQ,GAC7BiC,EAAgBjC,EAAQ,GACxByO,EAAazO,EAAQ,IACrBW,EAAeX,EAAQ,GAEvB6R,EAAe,CACjBhP,KAAM,eACNhC,SAmBF,SAA8BC,EAASC,EAAIC,GACzC,OAAOF,EAAQgD,QAAQwS,EAA0BC,EAAavV,GAE9D,SAASuV,EAAYtV,GACnB,OAAa,OAATA,EACKF,EAAGE,GAGRP,EAAmBO,GACdH,EAAQgD,QAAQwS,EAA0BC,EAAaxV,EAAvDD,CAA2DG,IAGpEH,EAAQ4C,MAAM,iBACP8H,EAAQvK,IAGjB,SAASuK,EAAQvK,GACf,OAAa,OAATA,GAAiBP,EAAmBO,IACtCH,EAAQ8C,KAAK,iBACN2S,EAAYtV,KAGrBH,EAAQ6C,QAAQ1C,GACTuK,KAzCTnK,QAOF,SAA6BpB,EAAQmB,GACnC,IAAIH,EAAO,CACTf,KAAM,eACNqD,MAAOtD,EAAO,GAAG,GAAGsD,MACpBC,IAAKvD,EAAOA,EAAOG,OAAS,GAAG,GAAGoD,KAIpC,OAFAvB,EAAchC,EAAQ,EAAG,EAAG,CAAC,CAAC,QAASgB,EAAMG,KAC7Ca,EAAchC,EAAQA,EAAOG,OAAQ,EAAG,CAAC,CAAC,OAAQa,EAAMG,KACjDnB,IAbLqW,EAA2B,CAC7BzV,SA0CF,SAAiCC,EAASC,EAAIC,GAC5C,IAAIgC,EAAOC,KACX,OAAOtC,EAAaG,GAEpB,SAASyV,EAAYtV,GACnB,GAAIP,EAAmBO,GAIrB,OAHAH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACNjD,EAAaG,EAASyV,EAAa,aAAc,GAG1D,OAAO9H,EAAWzL,EAAK/C,OAAQ,cAAgB,EAAIe,EAAIC,GAAQF,EAAGE,KAV1B,aAAc,IA3CxDC,SAAS,GAyDXrB,EAAOC,QAAU+R,G,iCCrEjB,IAAInR,EAAqBV,EAAQ,GAE7B8R,EAAW,CACbjP,KAAM,WACNhC,SAmEF,SAA0BC,EAASC,EAAIC,GACrC,IACIwE,EACAlB,EAFAwR,EAAW,EAGf,OAEA,SAAe7U,GAGb,OAFAH,EAAQ4C,MAAM,YACd5C,EAAQ4C,MAAM,oBACP6Q,EAAgBtT,IAGzB,SAASsT,EAAgBtT,GACvB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GAChB6U,IACOvB,IAGTzT,EAAQ8C,KAAK,oBACN4S,EAAIvV,IAGb,SAASuV,EAAIvV,GAEX,OAAa,OAATA,EACKD,EAAIC,GAIA,KAATA,GACFqD,EAAQxD,EAAQ4C,MAAM,oBACtB8B,EAAO,EACAgP,EAAgBvT,IAGZ,KAATA,GACFH,EAAQ4C,MAAM,SACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,SACN4S,GAGL9V,EAAmBO,IACrBH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACN4S,IAGT1V,EAAQ4C,MAAM,gBACP2E,EAAKpH,IAGd,SAASoH,EAAKpH,GACZ,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAP,EAAmBO,IAEnBH,EAAQ8C,KAAK,gBACN4S,EAAIvV,KAGbH,EAAQ6C,QAAQ1C,GACToH,GAGT,SAASmM,EAAgBvT,GAEvB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GAChBuE,IACOgP,GAGLhP,IAASsQ,GACXhV,EAAQ8C,KAAK,oBACb9C,EAAQ8C,KAAK,YACN7C,EAAGE,KAGZqD,EAAMpE,KAAO,eACNmI,EAAKpH,MAtJdI,QAIF,SAAyBpB,GACvB,IAEIsB,EACAmC,EAHA+S,EAAgBxW,EAAOG,OAAS,EAChCsW,EAAiB,EAIrB,IACsC,eAAnCzW,EAAOyW,GAAgB,GAAGxW,MACU,UAAnCD,EAAOyW,GAAgB,GAAGxW,QACO,eAAlCD,EAAOwW,GAAe,GAAGvW,MACU,UAAlCD,EAAOwW,GAAe,GAAGvW,MAI3B,IAFAqB,EAAQmV,IAECnV,EAAQkV,GACf,GAA8B,iBAA1BxW,EAAOsB,GAAO,GAAGrB,KAAyB,CAE5CD,EAAOwW,GAAe,GAAGvW,KAAOD,EAAOyW,GAAgB,GAAGxW,KACxD,kBACFwW,GAAkB,EAClBD,GAAiB,EACjB,MAKNlV,EAAQmV,EAAiB,EACzBD,IAEA,OAASlV,GAASkV,QACFzU,IAAV0B,EACEnC,IAAUkV,GAA2C,eAA1BxW,EAAOsB,GAAO,GAAGrB,OAC9CwD,EAAQnC,GAGVA,IAAUkV,GACgB,eAA1BxW,EAAOsB,GAAO,GAAGrB,OAEjBD,EAAOyD,GAAO,GAAGxD,KAAO,eAEpBqB,IAAUmC,EAAQ,IACpBzD,EAAOyD,GAAO,GAAGF,IAAMvD,EAAOsB,EAAQ,GAAG,GAAGiC,IAC5CvD,EAAO8E,OAAOrB,EAAQ,EAAGnC,EAAQmC,EAAQ,GACzC+S,GAAiBlV,EAAQmC,EAAQ,EACjCnC,EAAQmC,EAAQ,GAGlBA,OAAQ1B,GAIZ,OAAO/B,GAtDP+F,SAyDF,SAAkB/E,GAEhB,OACW,KAATA,GACgD,oBAAhDgC,KAAKhD,OAAOgD,KAAKhD,OAAOG,OAAS,GAAG,GAAGF,OA4F3CL,EAAOC,QAAUgS,G,iCC/JjB,IAAIpR,EAAqBV,EAAQ,GAC7BoC,EAA4BpC,EAAQ,GACpCsC,EAAsBtC,EAAQ,IAC9BwC,EAAqBxC,EAAQ,IAC7ByC,EAAezC,EAAQ,IACvBW,EAAeX,EAAQ,GACvB2C,EAAoB3C,EAAQ,IAC5B0C,EAAe1C,EAAQ,IAEvB+R,EAAa,CACflP,KAAM,aACNhC,SAOF,SAA4BC,EAASC,EAAIC,GACvC,IACI2V,EADA3T,EAAOC,KAEX,OAEA,SAAehC,GAEb,OADAH,EAAQ4C,MAAM,cACPjB,EAAayC,KAClBlC,EACAlC,EACA8V,EACA5V,EACA,kBACA,wBACA,wBAPKyB,CAQLxB,IAGJ,SAAS2V,EAAW3V,GAKlB,OAJA0V,EAAarU,EACXU,EAAKM,eAAeN,EAAK/C,OAAO+C,EAAK/C,OAAOG,OAAS,GAAG,IAAIuE,MAAM,GAAI,IAG3D,KAAT1D,GACFH,EAAQ4C,MAAM,oBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,oBAENjB,EACL7B,EACA0B,EACE1B,EACAA,EAAQgD,QACN+S,EACAlW,EAAaG,EAASsT,EAAO,cAC7BzT,EAAaG,EAASsT,EAAO,eAE/BpT,EACA,wBACA,+BACA,qCACA,2BACA,iCAKCA,EAAIC,GAGb,SAASmT,EAAMnT,GACb,OAAa,OAATA,GAAiBP,EAAmBO,IACtCH,EAAQ8C,KAAK,cAETZ,EAAKK,OAAON,QAAQtB,QAAQkV,GAAc,GAC5C3T,EAAKK,OAAON,QAAQrB,KAAKiV,GAGpB5V,EAAGE,IAGLD,EAAIC,MAlEX4V,EAAiB,CACnBhW,SAqEF,SAAuBC,EAASC,EAAIC,GAClC,OAEA,SAAeC,GACb,OAAOmB,EAA0BnB,GAC7B0B,EAAkB7B,EAASwI,EAA3B3G,CAAmC1B,GACnCD,EAAIC,IAGV,SAASqI,EAAOrI,GACd,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzByB,EACL5B,EACAH,EAAaG,EAASsT,EAAO,cAC7BpT,EACA,kBACA,wBACA,wBANK0B,CAOLzB,GAGGD,EAAIC,GAGb,SAASmT,EAAMnT,GACb,OAAgB,OAATA,GAAiBP,EAAmBO,GAAQF,EAAGE,GAAQD,EAAIC,KA7FpEC,SAAS,GAiGXrB,EAAOC,QAAUiS,G,iCChHjB,IAAIrR,EAAqBV,EAAQ,GAE7BgS,EAAkB,CACpBnP,KAAM,kBACNhC,SAGF,SAAiCC,EAASC,EAAIC,GAC5C,OAEA,SAAeC,GAIb,OAHAH,EAAQ4C,MAAM,mBACd5C,EAAQ4C,MAAM,gBACd5C,EAAQ6C,QAAQ1C,GACTsD,GAGT,SAASA,EAAKtD,GACZ,OAAIP,EAAmBO,IACrBH,EAAQ8C,KAAK,gBACb9C,EAAQ8C,KAAK,mBACN7C,EAAGE,IAGLD,EAAIC,MAIfpB,EAAOC,QAAUkS,G,iCC5BjB,IAAItR,EAAqBV,EAAQ,GAC7BoC,EAA4BpC,EAAQ,GACpCoF,EAAgBpF,EAAQ,GACxBiC,EAAgBjC,EAAQ,GACxBW,EAAeX,EAAQ,GAEvBiS,EAAa,CACfpP,KAAM,aACNhC,SAqDF,SAA4BC,EAASC,EAAIC,GACvC,IAAIgC,EAAOC,KACPuC,EAAO,EACX,OAEA,SAAevE,GAGb,OAFAH,EAAQ4C,MAAM,cACd5C,EAAQ4C,MAAM,sBACPoT,EAAgB7V,IAGzB,SAAS6V,EAAgB7V,GACvB,OAAa,KAATA,GAAeuE,IAAS,GAC1B1E,EAAQ6C,QAAQ1C,GACT6V,GAGI,OAAT7V,GAAiBmB,EAA0BnB,IAC7CH,EAAQ8C,KAAK,sBACNZ,EAAKoK,UAAYrM,EAAGE,GAAQ8V,EAAa9V,IAG3CD,EAAIC,GAGb,SAAS8V,EAAa9V,GACpB,OAAa,KAATA,GACFH,EAAQ4C,MAAM,sBACPsH,EAAS/J,IAGL,OAATA,GAAiBP,EAAmBO,IACtCH,EAAQ8C,KAAK,cACN7C,EAAGE,IAGRmE,EAAcnE,GACTN,EAAaG,EAASiW,EAAc,aAApCpW,CAAkDM,IAG3DH,EAAQ4C,MAAM,kBACP2E,EAAKpH,IAGd,SAAS+J,EAAS/J,GAChB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACT+J,IAGTlK,EAAQ8C,KAAK,sBACNmT,EAAa9V,IAGtB,SAASoH,EAAKpH,GACZ,OAAa,OAATA,GAA0B,KAATA,GAAemB,EAA0BnB,IAC5DH,EAAQ8C,KAAK,kBACNmT,EAAa9V,KAGtBH,EAAQ6C,QAAQ1C,GACToH,KAjHThH,QAGF,SAA2BpB,EAAQmB,GACjC,IAEIoK,EACAnH,EAHAsK,EAAa1O,EAAOG,OAAS,EAC7B6L,EAAe,EAIkB,eAAjChM,EAAOgM,GAAc,GAAG/L,OAC1B+L,GAAgB,GAIhB0C,EAAa,EAAI1C,GACc,eAA/BhM,EAAO0O,GAAY,GAAGzO,OAEtByO,GAAc,GAIiB,uBAA/B1O,EAAO0O,GAAY,GAAGzO,OACrB+L,IAAiB0C,EAAa,GAC5BA,EAAa,EAAI1C,GACmB,eAAnChM,EAAO0O,EAAa,GAAG,GAAGzO,QAE9ByO,GAAc1C,EAAe,IAAM0C,EAAa,EAAI,GAGlDA,EAAa1C,IACfT,EAAU,CACRtL,KAAM,iBACNqD,MAAOtD,EAAOgM,GAAc,GAAG1I,MAC/BC,IAAKvD,EAAO0O,GAAY,GAAGnL,KAE7Ba,EAAO,CACLnE,KAAM,YACNqD,MAAOtD,EAAOgM,GAAc,GAAG1I,MAC/BC,IAAKvD,EAAO0O,GAAY,GAAGnL,IAC3B+C,YAAa,QAEftE,EAAchC,EAAQgM,EAAc0C,EAAa1C,EAAe,EAAG,CACjE,CAAC,QAAST,EAASpK,GACnB,CAAC,QAASiD,EAAMjD,GAChB,CAAC,OAAQiD,EAAMjD,GACf,CAAC,OAAQoK,EAASpK,MAItB,OAAOnB,IAoETJ,EAAOC,QAAUmS,G,iCC9HjB,IAAItQ,EAAa3B,EAAQ,IACrBM,EAAoBN,EAAQ,IAC5BU,EAAqBV,EAAQ,GAC7BoC,EAA4BpC,EAAQ,GACpCoF,EAAgBpF,EAAQ,GACxBQ,EAAeR,EAAQ,IACvBgX,EAAiBhX,EAAQ,KACzBiX,EAAejX,EAAQ,KACvBY,EAAmBZ,EAAQ,IAE3BkS,EAAW,CACbrP,KAAM,WACNhC,SA8BF,SAA0BC,EAASC,EAAIC,GACrC,IACIkW,EACAC,EACAC,EACA7V,EACAmJ,EALA1H,EAAOC,KAMX,OAEA,SAAehC,GAIb,OAHAH,EAAQ4C,MAAM,YACd5C,EAAQ4C,MAAM,gBACd5C,EAAQ6C,QAAQ1C,GACTsD,GAGT,SAASA,EAAKtD,GACZ,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACToW,GAGI,KAATpW,GACFH,EAAQ6C,QAAQ1C,GACTqW,GAGI,KAATrW,GACFH,EAAQ6C,QAAQ1C,GAChBiW,EAAO,EAGAlU,EAAKoK,UAAYrM,EAAKwW,GAG3B5V,EAAWV,IACbH,EAAQ6C,QAAQ1C,GAChBmW,EAAS5W,EAAaS,GACtBkW,GAAW,EACJK,GAGFxW,EAAIC,GAGb,SAASoW,EAAiBpW,GACxB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GAChBiW,EAAO,EACAO,GAGI,KAATxW,GACFH,EAAQ6C,QAAQ1C,GAChBiW,EAAO,EACPE,EAAS,SACT7V,EAAQ,EACDmW,GAGL/V,EAAWV,IACbH,EAAQ6C,QAAQ1C,GAChBiW,EAAO,EACAlU,EAAKoK,UAAYrM,EAAKwW,GAGxBvW,EAAIC,GAGb,SAASwW,EAAkBxW,GACzB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACT+B,EAAKoK,UAAYrM,EAAKwW,GAGxBvW,EAAIC,GAGb,SAASyW,EAAgBzW,GACvB,OAAIA,IAASmW,EAAOzO,WAAWpH,MAC7BT,EAAQ6C,QAAQ1C,GACTM,IAAU6V,EAAOhX,OACpB4C,EAAKoK,UACHrM,EACA8L,EACF6K,GAGC1W,EAAIC,GAGb,SAASqW,EAAcrW,GACrB,OAAIU,EAAWV,IACbH,EAAQ6C,QAAQ1C,GAChBmW,EAAS5W,EAAaS,GACfuW,GAGFxW,EAAIC,GAGb,SAASuW,EAAQvW,GACf,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAmB,EAA0BnB,GAGf,KAATA,GACAkW,GACAF,EAAaxV,QAAQ2V,EAAOtV,gBAAkB,GAE9CoV,EAAO,EACAlU,EAAKoK,UAAYrM,EAAGE,GAAQ4L,EAAa5L,IAG9C+V,EAAevV,QAAQ2V,EAAOtV,gBAAkB,GAClDoV,EAAO,EAEM,KAATjW,GACFH,EAAQ6C,QAAQ1C,GACT0W,GAGF3U,EAAKoK,UAAYrM,EAAGE,GAAQ4L,EAAa5L,KAGlDiW,EAAO,EAEAlU,EAAKoK,UACRpM,EAAIC,GACJkW,EACAS,EAA4B3W,GAC5B4W,EAAwB5W,IAGjB,KAATA,GAAeX,EAAkBW,IACnCH,EAAQ6C,QAAQ1C,GAChBmW,GAAU5W,EAAaS,GAChBuW,GAGFxW,EAAIC,GAGb,SAAS0W,EAAiB1W,GACxB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACT+B,EAAKoK,UAAYrM,EAAK8L,GAGxB7L,EAAIC,GAGb,SAAS4W,EAAwB5W,GAC/B,OAAImE,EAAcnE,IAChBH,EAAQ6C,QAAQ1C,GACT4W,GAGFC,EAAY7W,GAGrB,SAAS2W,EAA4B3W,GACnC,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACT6W,GAGI,KAAT7W,GAAwB,KAATA,GAAeU,EAAWV,IAC3CH,EAAQ6C,QAAQ1C,GACT8W,GAGL3S,EAAcnE,IAChBH,EAAQ6C,QAAQ1C,GACT2W,GAGFE,EAAY7W,GAGrB,SAAS8W,EAAsB9W,GAC7B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAX,EAAkBW,IAElBH,EAAQ6C,QAAQ1C,GACT8W,GAGFC,EAA2B/W,GAGpC,SAAS+W,EAA2B/W,GAClC,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACTgX,GAGL7S,EAAcnE,IAChBH,EAAQ6C,QAAQ1C,GACT+W,GAGFJ,EAA4B3W,GAGrC,SAASgX,EAA6BhX,GACpC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOD,EAAIC,GAGA,KAATA,GAAwB,KAATA,GACjBH,EAAQ6C,QAAQ1C,GAChByJ,EAASzJ,EACFiX,GAGL9S,EAAcnE,IAChBH,EAAQ6C,QAAQ1C,GACTgX,IAGTvN,OAAS1I,EACFmW,EAA+BlX,IAGxC,SAASiX,EAA6BjX,GACpC,OAAIA,IAASyJ,GACX5J,EAAQ6C,QAAQ1C,GACTmX,GAGI,OAATnX,GAAiBP,EAAmBO,GAC/BD,EAAIC,IAGbH,EAAQ6C,QAAQ1C,GACTiX,GAGT,SAASC,EAA+BlX,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAmB,EAA0BnB,GAEnB+W,EAA2B/W,IAGpCH,EAAQ6C,QAAQ1C,GACTkX,GAGT,SAASC,EAAkCnX,GACzC,OAAa,KAATA,GAAwB,KAATA,GAAemE,EAAcnE,GACvC2W,EAA4B3W,GAG9BD,EAAIC,GAGb,SAAS6W,EAAY7W,GACnB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACToX,GAGFrX,EAAIC,GAGb,SAASoX,EAAcpX,GACrB,OAAImE,EAAcnE,IAChBH,EAAQ6C,QAAQ1C,GACToX,GAGO,OAATpX,GAAiBP,EAAmBO,GACvC4L,EAAa5L,GACbD,EAAIC,GAGV,SAAS4L,EAAa5L,GACpB,OAAa,KAATA,GAAwB,IAATiW,GACjBpW,EAAQ6C,QAAQ1C,GACTqX,GAGI,KAATrX,GAAwB,IAATiW,GACjBpW,EAAQ6C,QAAQ1C,GACTsX,GAGI,KAATtX,GAAwB,IAATiW,GACjBpW,EAAQ6C,QAAQ1C,GACTuX,GAGI,KAATvX,GAAwB,IAATiW,GACjBpW,EAAQ6C,QAAQ1C,GACTsW,GAGI,KAATtW,GAAwB,IAATiW,GACjBpW,EAAQ6C,QAAQ1C,GACTwX,IAGL/X,EAAmBO,IAAmB,IAATiW,GAAuB,IAATA,EAQlC,OAATjW,GAAiBP,EAAmBO,GAC/ByX,EAAyBzX,IAGlCH,EAAQ6C,QAAQ1C,GACT4L,GAZE/L,EAAQ6M,MACbgL,EACAH,EACAE,EAHK5X,CAILG,GAWN,SAASyX,EAAyBzX,GAEhC,OADAH,EAAQ8C,KAAK,gBACNgV,EAAkB3X,GAG3B,SAAS2X,EAAkB3X,GACzB,OAAa,OAATA,EACK4X,EAAK5X,GAGVP,EAAmBO,IACrBH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACNgV,IAGT9X,EAAQ4C,MAAM,gBACPmJ,EAAa5L,IAGtB,SAASqX,EAA0BrX,GACjC,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACTsW,GAGF1K,EAAa5L,GAGtB,SAASsX,EAAuBtX,GAC9B,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GAChBmW,EAAS,GACF0B,GAGFjM,EAAa5L,GAGtB,SAAS6X,EAAsB7X,GAC7B,OAAa,KAATA,GAAegW,EAAaxV,QAAQ2V,EAAOtV,gBAAkB,GAC/DhB,EAAQ6C,QAAQ1C,GACTuX,GAGL7W,EAAWV,IAASmW,EAAOhX,OAAS,GACtCU,EAAQ6C,QAAQ1C,GAChBmW,GAAU5W,EAAaS,GAChB6X,GAGFjM,EAAa5L,GAGtB,SAASwX,EAAgCxX,GACvC,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACTsW,GAGF1K,EAAa5L,GAGtB,SAASsW,EAA8BtW,GACrC,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACTuX,GAGF3L,EAAa5L,GAGtB,SAASuX,EAAkBvX,GACzB,OAAa,OAATA,GAAiBP,EAAmBO,IACtCH,EAAQ8C,KAAK,gBACNiV,EAAK5X,KAGdH,EAAQ6C,QAAQ1C,GACTuX,GAGT,SAASK,EAAK5X,GAEZ,OADAH,EAAQ8C,KAAK,YACN7C,EAAGE,KAtcZiD,UAQF,SAA2BjE,GACzB,IAAIsB,EAAQtB,EAAOG,OAEnB,KAAOmB,MACoB,UAArBtB,EAAOsB,GAAO,IAA4C,aAA1BtB,EAAOsB,GAAO,GAAGrB,QAKnDqB,EAAQ,GAAmC,eAA9BtB,EAAOsB,EAAQ,GAAG,GAAGrB,OAEpCD,EAAOsB,GAAO,GAAGgC,MAAQtD,EAAOsB,EAAQ,GAAG,GAAGgC,MAE9CtD,EAAOsB,EAAQ,GAAG,GAAGgC,MAAQtD,EAAOsB,EAAQ,GAAG,GAAGgC,MAElDtD,EAAO8E,OAAOxD,EAAQ,EAAG,IAG3B,OAAOtB,GAzBPgN,UAAU,GAER0L,EAAqB,CACvB9X,SAscF,SAA2BC,EAASC,EAAIC,GACtC,OAEA,SAAeC,GAKb,OAJAH,EAAQ8C,KAAK,gBACb9C,EAAQ4C,MAAM,mBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,mBACN9C,EAAQgD,QAAQlD,EAAkBG,EAAIC,KA7c/CE,SAAS,GAidXrB,EAAOC,QAAUoS,G,iCCjajBrS,EAAOC,QAjEM,CACX,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,SACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,O,iCC5DFD,EAAOC,QAFI,CAAC,MAAO,SAAU,QAAS,a,iCCDtC,IAAI6B,EAAa3B,EAAQ,IACrBM,EAAoBN,EAAQ,IAC5BU,EAAqBV,EAAQ,GAC7BoC,EAA4BpC,EAAQ,GACpCoF,EAAgBpF,EAAQ,GACxBW,EAAeX,EAAQ,GAEvBmS,EAAW,CACbtP,KAAM,WACNhC,SAGF,SAA0BC,EAASC,EAAIC,GACrC,IACI0J,EACA0M,EACA7V,EACA2O,EAJAlN,EAAOC,KAKX,OAEA,SAAehC,GAIb,OAHAH,EAAQ4C,MAAM,YACd5C,EAAQ4C,MAAM,gBACd5C,EAAQ6C,QAAQ1C,GACTsD,GAGT,SAASA,EAAKtD,GACZ,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACT8X,GAGI,KAAT9X,GACFH,EAAQ6C,QAAQ1C,GACTqW,GAGI,KAATrW,GACFH,EAAQ6C,QAAQ1C,GACT+X,GAGLrX,EAAWV,IACbH,EAAQ6C,QAAQ1C,GACTgY,GAGFjY,EAAIC,GAGb,SAAS8X,EAAgB9X,GACvB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACTiY,GAGI,KAATjY,GACFH,EAAQ6C,QAAQ1C,GAChBmW,EAAS,SACT7V,EAAQ,EACD4X,GAGLxX,EAAWV,IACbH,EAAQ6C,QAAQ1C,GACTmY,GAGFpY,EAAIC,GAGb,SAASiY,EAAYjY,GACnB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACToY,GAGFrY,EAAIC,GAGb,SAASoY,EAAapY,GACpB,OAAa,OAATA,GAA0B,KAATA,EACZD,EAAIC,GAGA,KAATA,GACFH,EAAQ6C,QAAQ1C,GACTqY,GAGFC,EAAQtY,GAGjB,SAASqY,EAAiBrY,GACxB,OAAa,OAATA,GAA0B,KAATA,EACZD,EAAIC,GAGNsY,EAAQtY,GAGjB,SAASsY,EAAQtY,GACf,OAAa,OAATA,EACKD,EAAIC,GAGA,KAATA,GACFH,EAAQ6C,QAAQ1C,GACTuY,GAGL9Y,EAAmBO,IACrBiP,EAAcqJ,EACPE,EAAaxY,KAGtBH,EAAQ6C,QAAQ1C,GACTsY,GAGT,SAASC,EAAavY,GACpB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACTuC,GAGF+V,EAAQtY,GAGjB,SAASkY,EAAUlY,GACjB,OAAIA,IAASmW,EAAOzO,WAAWpH,MAC7BT,EAAQ6C,QAAQ1C,GACTM,IAAU6V,EAAOhX,OAASsZ,EAAQP,GAGpCnY,EAAIC,GAGb,SAASyY,EAAMzY,GACb,OAAa,OAATA,EACKD,EAAIC,GAGA,KAATA,GACFH,EAAQ6C,QAAQ1C,GACT0Y,GAGLjZ,EAAmBO,IACrBiP,EAAcwJ,EACPD,EAAaxY,KAGtBH,EAAQ6C,QAAQ1C,GACTyY,GAGT,SAASC,EAAW1Y,GAClB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACT2Y,GAGFF,EAAMzY,GAGf,SAAS2Y,EAAS3Y,GAChB,OAAa,KAATA,EACKuC,EAAIvC,GAGA,KAATA,GACFH,EAAQ6C,QAAQ1C,GACT2Y,GAGFF,EAAMzY,GAGf,SAASmY,EAAYnY,GACnB,OAAa,OAATA,GAA0B,KAATA,EACZuC,EAAIvC,GAGTP,EAAmBO,IACrBiP,EAAckJ,EACPK,EAAaxY,KAGtBH,EAAQ6C,QAAQ1C,GACTmY,GAGT,SAASJ,EAAY/X,GACnB,OAAa,OAATA,EACKD,EAAIC,GAGA,KAATA,GACFH,EAAQ6C,QAAQ1C,GACT4Y,GAGLnZ,EAAmBO,IACrBiP,EAAc8I,EACPS,EAAaxY,KAGtBH,EAAQ6C,QAAQ1C,GACT+X,GAGT,SAASa,EAAiB5Y,GACxB,OAAgB,KAATA,EAAcuC,EAAIvC,GAAQ+X,EAAY/X,GAG/C,SAASqW,EAAcrW,GACrB,OAAIU,EAAWV,IACbH,EAAQ6C,QAAQ1C,GACT6Y,GAGF9Y,EAAIC,GAGb,SAAS6Y,EAAS7Y,GAChB,OAAa,KAATA,GAAeX,EAAkBW,IACnCH,EAAQ6C,QAAQ1C,GACT6Y,GAGFC,EAAgB9Y,GAGzB,SAAS8Y,EAAgB9Y,GACvB,OAAIP,EAAmBO,IACrBiP,EAAc6J,EACPN,EAAaxY,IAGlBmE,EAAcnE,IAChBH,EAAQ6C,QAAQ1C,GACT8Y,GAGFvW,EAAIvC,GAGb,SAASgY,EAAQhY,GACf,OAAa,KAATA,GAAeX,EAAkBW,IACnCH,EAAQ6C,QAAQ1C,GACTgY,GAGI,KAAThY,GAAwB,KAATA,GAAemB,EAA0BnB,GACnD+Y,EAAe/Y,GAGjBD,EAAIC,GAGb,SAAS+Y,EAAe/Y,GACtB,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACTuC,GAGI,KAATvC,GAAwB,KAATA,GAAeU,EAAWV,IAC3CH,EAAQ6C,QAAQ1C,GACTgZ,GAGLvZ,EAAmBO,IACrBiP,EAAc8J,EACPP,EAAaxY,IAGlBmE,EAAcnE,IAChBH,EAAQ6C,QAAQ1C,GACT+Y,GAGFxW,EAAIvC,GAGb,SAASgZ,EAAqBhZ,GAC5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAX,EAAkBW,IAElBH,EAAQ6C,QAAQ1C,GACTgZ,GAGFC,EAA0BjZ,GAGnC,SAASiZ,EAA0BjZ,GACjC,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GACTkZ,GAGLzZ,EAAmBO,IACrBiP,EAAcgK,EACPT,EAAaxY,IAGlBmE,EAAcnE,IAChBH,EAAQ6C,QAAQ1C,GACTiZ,GAGFF,EAAe/Y,GAGxB,SAASkZ,EAA4BlZ,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOD,EAAIC,GAGA,KAATA,GAAwB,KAATA,GACjBH,EAAQ6C,QAAQ1C,GAChByJ,EAASzJ,EACFmZ,GAGL1Z,EAAmBO,IACrBiP,EAAciK,EACPV,EAAaxY,IAGlBmE,EAAcnE,IAChBH,EAAQ6C,QAAQ1C,GACTkZ,IAGTrZ,EAAQ6C,QAAQ1C,GAChByJ,OAAS1I,EACFqY,GAGT,SAASD,EAA4BnZ,GACnC,OAAIA,IAASyJ,GACX5J,EAAQ6C,QAAQ1C,GACTqZ,GAGI,OAATrZ,EACKD,EAAIC,GAGTP,EAAmBO,IACrBiP,EAAckK,EACPX,EAAaxY,KAGtBH,EAAQ6C,QAAQ1C,GACTmZ,GAGT,SAASE,EAAiCrZ,GACxC,OAAa,KAATA,GAAwB,KAATA,GAAemB,EAA0BnB,GACnD+Y,EAAe/Y,GAGjBD,EAAIC,GAGb,SAASoZ,EAA8BpZ,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOD,EAAIC,GAGA,KAATA,GAAemB,EAA0BnB,GACpC+Y,EAAe/Y,IAGxBH,EAAQ6C,QAAQ1C,GACToZ,GAIT,SAASZ,EAAaxY,GAKpB,OAJAH,EAAQ8C,KAAK,gBACb9C,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACNjD,EACLG,EACAyV,EACA,aACAvT,EAAKK,OAAOlC,WAAWkN,QAAQxJ,KAAKpD,QAAQ,iBAAmB,OAC3DO,EACA,GAIR,SAASuU,EAAYtV,GAEnB,OADAH,EAAQ4C,MAAM,gBACPwM,EAAYjP,GAGrB,SAASuC,EAAIvC,GACX,OAAa,KAATA,GACFH,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,gBACb9C,EAAQ8C,KAAK,YACN7C,GAGFC,EAAIC,MAIfpB,EAAOC,QAAUqS,G,iCChbjB,IAEIC,EAAkB,CACpBvP,KAAM,kBACNhC,SAIF,SAAiCC,EAASC,EAAIC,GAC5C,IAAIgC,EAAOC,KACX,OAEA,SAAehC,GAKb,OAJAH,EAAQ4C,MAAM,cACd5C,EAAQ4C,MAAM,oBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,oBACNW,GAGT,SAASA,EAAKtD,GACZ,OAAa,KAATA,GACFH,EAAQ4C,MAAM,eACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,eACb9C,EAAQ8C,KAAK,cACNwQ,GAGFpT,EAAIC,GAGb,SAASmT,EAAMnT,GAEb,OAAgB,KAATA,GAEL,2BAA4B+B,EAAKK,OAAOlC,WAEtCH,EAAIC,GACJF,EAAGE,KAlCTO,WALaxB,EAAQ,IAKAwB,YAsCvB3B,EAAOC,QAAUsS,G,iCC3CjB,IAEIC,EAAiB,CACnBxP,KAAM,iBACNhC,SAIF,SAAgCC,EAASC,EAAIC,GAC3C,IAAIgC,EAAOC,KACX,OAEA,SAAehC,GAMb,OALAH,EAAQ4C,MAAM,aACd5C,EAAQ4C,MAAM,eACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,eACb9C,EAAQ8C,KAAK,aACNwQ,GAGT,SAASA,EAAMnT,GAEb,OAAgB,KAATA,GAEL,2BAA4B+B,EAAKK,OAAOlC,WAEtCH,EAAIC,GACJF,EAAGE,KAvBTO,WALaxB,EAAQ,IAKAwB,YA2BvB3B,EAAOC,QAAUuS,G,iCChCjB,IAAI1R,EAAeX,EAAQ,GAEvBsS,EAAa,CACfzP,KAAM,aACNhC,SAGF,SAA4BC,EAASC,GACnC,OAEA,SAAeE,GAIb,OAHAH,EAAQ4C,MAAM,cACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,cACNjD,EAAaG,EAASC,EAAI,iBAIrClB,EAAOC,QAAUwS,G,iCClBjB,IAAI3I,EAAa3J,EAAQ,IACrBoF,EAAgBpF,EAAQ,GACxByO,EAAazO,EAAQ,IACrBD,EAAaC,EAAQ,IACrBW,EAAeX,EAAQ,GACvBY,EAAmBZ,EAAQ,IAC3B+K,EAAgB/K,EAAQ,IAExBkC,EAAO,CACTW,KAAM,OACNhC,SAeF,SAA2BC,EAASC,EAAIC,GACtC,IAAIgC,EAAOC,KACPsX,EAAc9L,EAAWzL,EAAK/C,OAAQ,cACtCuF,EAAO,EACX,OAEA,SAAevE,GACb,IAAIiW,EACFlU,EAAK4J,eAAe1M,OACV,KAATe,GAAwB,KAATA,GAAwB,KAATA,EAC3B,gBACA,eAEN,GACW,kBAATiW,GACKlU,EAAK4J,eAAelC,QAAUzJ,IAAS+B,EAAK4J,eAAelC,OAC5Df,EAAW1I,GACf,CAQA,GAPK+B,EAAK4J,eAAe1M,OACvB8C,EAAK4J,eAAe1M,KAAOgX,EAC3BpW,EAAQ4C,MAAMwT,EAAM,CAClBvP,YAAY,KAIH,kBAATuP,EAEF,OADApW,EAAQ4C,MAAM,kBACE,KAATzC,GAAwB,KAATA,EAClBH,EAAQ6M,MAAM5C,EAAe/J,EAAKwZ,EAAlC1Z,CAA4CG,GAC5CuZ,EAASvZ,GAGf,IAAK+B,EAAKoK,WAAsB,KAATnM,EAGrB,OAFAH,EAAQ4C,MAAM,kBACd5C,EAAQ4C,MAAM,iBACP+W,EAAOxZ,GAIlB,OAAOD,EAAIC,IAGb,SAASwZ,EAAOxZ,GACd,OAAI0I,EAAW1I,MAAWuE,EAAO,IAC/B1E,EAAQ6C,QAAQ1C,GACTwZ,KAILzX,EAAKoK,WAAa5H,EAAO,KAC1BxC,EAAK4J,eAAelC,OACjBzJ,IAAS+B,EAAK4J,eAAelC,OACpB,KAATzJ,GAAwB,KAATA,IAEnBH,EAAQ8C,KAAK,iBACN4W,EAASvZ,IAGXD,EAAIC,GAGb,SAASuZ,EAASvZ,GAKhB,OAJAH,EAAQ4C,MAAM,kBACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,kBACbZ,EAAK4J,eAAelC,OAAS1H,EAAK4J,eAAelC,QAAUzJ,EACpDH,EAAQ6M,MACb/M,EACAoC,EAAKoK,UAAYpM,EAAM0Z,EACvB5Z,EAAQgD,QACN6W,EACAC,EACAC,IAKN,SAASH,EAAQzZ,GAGf,OAFA+B,EAAK4J,eAAekO,kBAAmB,EACvCP,IACOK,EAAY3Z,GAGrB,SAAS4Z,EAAY5Z,GACnB,OAAImE,EAAcnE,IAChBH,EAAQ4C,MAAM,4BACd5C,EAAQ6C,QAAQ1C,GAChBH,EAAQ8C,KAAK,4BACNgX,GAGF5Z,EAAIC,GAGb,SAAS2Z,EAAY3Z,GAGnB,OAFA+B,EAAK4J,eAAepH,KAClB+U,EAAcxa,EAAWiD,EAAK3C,YAAYS,EAAQ8C,KAAK,oBAClD7C,EAAGE,KA/GZ4L,aAAc,CACZhM,SAkHJ,SAAkCC,EAASC,EAAIC,GAC7C,IAAIgC,EAAOC,KAEX,OADAD,EAAK4J,eAAeY,gBAAaxL,EAC1BlB,EAAQ6M,MAAM/M,GAErB,SAAiBK,GAIf,OAHA+B,EAAK4J,eAAemO,kBAClB/X,EAAK4J,eAAemO,mBACpB/X,EAAK4J,eAAekO,iBACf/Z,EAAGE,MAGZ,SAAkBA,GAChB,GAAI+B,EAAK4J,eAAemO,oBAAsB3V,EAAcnE,GAE1D,OADA+B,EAAK4J,eAAemO,kBAAoB/X,EAAK4J,eAAekO,sBAAmB9Y,EACxEgZ,EAAiB/Z,GAI1B,OADA+B,EAAK4J,eAAemO,kBAAoB/X,EAAK4J,eAAekO,sBAAmB9Y,EACxElB,EAAQgD,QAAQmX,EAAiBla,EAAIia,EAArCla,CAAuDG,MAGhE,SAAS+Z,EAAiB/Z,GAKxB,OAHA+B,EAAK4J,eAAeY,YAAa,EAEjCxK,EAAKoK,eAAYpL,EACVrB,EACLG,EACAA,EAAQgD,QAAQ5B,EAAMnB,EAAIC,GAC1B,aACAgC,EAAKK,OAAOlC,WAAWkN,QAAQxJ,KAAKpD,QAAQ,iBAAmB,OAC3DO,EACA,EANCrB,CAOLM,MAlJJ2C,KAuKF,SAAyB9C,GACvBA,EAAQ8C,KAAKX,KAAK2J,eAAe1M,QAtK/Bya,EAAoC,CACtC9Z,SAwKF,SAA0CC,EAASC,EAAIC,GACrD,IAAIgC,EAAOC,KACX,OAAOtC,EACLG,GAQF,SAAqBG,GACnB,OAAOmE,EAAcnE,KAClBwN,EAAWzL,EAAK/C,OAAQ,4BACvBe,EAAIC,GACJF,EAAGE,KAVP,2BACA+B,EAAKK,OAAOlC,WAAWkN,QAAQxJ,KAAKpD,QAAQ,iBAAmB,OAC3DO,EACA,IA/KNd,SAAS,GAEP+Z,EAAkB,CACpBpa,SA+IF,SAAwBC,EAASC,EAAIC,GACnC,IAAIgC,EAAOC,KACX,OAAOtC,EACLG,GAMF,SAAqBG,GACnB,OAAOwN,EAAWzL,EAAK/C,OAAQ,oBAC7B+C,EAAK4J,eAAepH,KAClBzE,EAAGE,GACHD,EAAIC,KARR,iBACA+B,EAAK4J,eAAepH,KAAO,IApJ7BtE,SAAS,GAsLXrB,EAAOC,QAAUoC,G,iCC5MjB,IAAIxB,EAAqBV,EAAQ,GAC7BuC,EAAUvC,EAAQ,GAClBW,EAAeX,EAAQ,GAEvBuS,EAAkB,CACpB1P,KAAM,kBACNhC,SAwDF,SAAiCC,EAASC,EAAIC,GAC5C,IAEI0J,EACAwQ,EAHAlY,EAAOC,KACP1B,EAAQyB,EAAK/C,OAAOG,OAIxB,KAAOmB,KAGL,GACiC,eAA/ByB,EAAK/C,OAAOsB,GAAO,GAAGrB,MACS,eAA/B8C,EAAK/C,OAAOsB,GAAO,GAAGrB,MACS,YAA/B8C,EAAK/C,OAAOsB,GAAO,GAAGrB,KACtB,CACAgb,EAA2C,cAA/BlY,EAAK/C,OAAOsB,GAAO,GAAGrB,KAClC,MAIJ,OAEA,SAAee,GACb,IAAK+B,EAAKyK,OAASzK,EAAKoK,WAAa8N,GAInC,OAHApa,EAAQ4C,MAAM,qBACd5C,EAAQ4C,MAAM,6BACdgH,EAASzJ,EACFuT,EAAgBvT,GAGzB,OAAOD,EAAIC,IAGb,SAASuT,EAAgBvT,GACvB,OAAIA,IAASyJ,GACX5J,EAAQ6C,QAAQ1C,GACTuT,IAGT1T,EAAQ8C,KAAK,6BACNjD,EAAaG,EAASiV,EAAoB,aAA1CpV,CAAwDM,IAGjE,SAAS8U,EAAmB9U,GAC1B,OAAa,OAATA,GAAiBP,EAAmBO,IACtCH,EAAQ8C,KAAK,qBACN7C,EAAGE,IAGLD,EAAIC,KAvGbiD,UAGF,SAAkCjE,EAAQmB,GACxC,IACIoK,EACAnH,EACA0N,EACAoJ,EAJA5Z,EAAQtB,EAAOG,OAOnB,KAAOmB,KACL,GAAyB,UAArBtB,EAAOsB,GAAO,GAAgB,CAChC,GAA8B,YAA1BtB,EAAOsB,GAAO,GAAGrB,KAAoB,CACvCsL,EAAUjK,EACV,MAG4B,cAA1BtB,EAAOsB,GAAO,GAAGrB,OACnBmE,EAAO9C,OAIqB,YAA1BtB,EAAOsB,GAAO,GAAGrB,MAEnBD,EAAO8E,OAAOxD,EAAO,GAGlBwQ,GAAwC,eAA1B9R,EAAOsB,GAAO,GAAGrB,OAClC6R,EAAaxQ,GAKnB4Z,EAAU,CACRjb,KAAM,gBACNqD,MAAOhB,EAAQtC,EAAOoE,GAAM,GAAGd,OAC/BC,IAAKjB,EAAQtC,EAAOA,EAAOG,OAAS,GAAG,GAAGoD,MAG5CvD,EAAOoE,GAAM,GAAGnE,KAAO,oBAGnB6R,GACF9R,EAAO8E,OAAOV,EAAM,EAAG,CAAC,QAAS8W,EAAS/Z,IAC1CnB,EAAO8E,OAAOgN,EAAa,EAAG,EAAG,CAAC,OAAQ9R,EAAOuL,GAAS,GAAIpK,IAC9DnB,EAAOuL,GAAS,GAAGhI,IAAMjB,EAAQtC,EAAO8R,GAAY,GAAGvO,MAEvDvD,EAAOuL,GAAS,GAAK2P,EAIvB,OADAlb,EAAOyB,KAAK,CAAC,OAAQyZ,EAAS/Z,IACvBnB,IAuDTJ,EAAOC,QAAUyS,G,iCClHjB,IAAI6I,EAAS,cAoFbvb,EAAOC,QAlFP,WACE,IAGIub,EAHA9X,GAAQ,EACRqF,EAAS,EACTwO,EAAS,GAEb,OAEA,SAAsBxV,EAAO0Z,EAAU9X,GACrC,IACI+X,EACA5U,EACAR,EACAqV,EACAva,EALA2E,EAAS,GAMbhE,EAAQwV,EAASxV,EAAM6Z,SAASH,GAChCnV,EAAgB,EAChBiR,EAAS,GAEL7T,IAC0B,QAAxB3B,EAAM+G,WAAW,IACnBxC,IAGF5C,OAAQvB,GAGV,KAAOmE,EAAgBvE,EAAMxB,QAAQ,CAMnC,GALAgb,EAAOM,UAAYvV,EACnBoV,EAAQH,EAAOO,KAAK/Z,GACpB4Z,EAAcD,EAAQA,EAAMha,MAAQK,EAAMxB,OAC1Ca,EAAOW,EAAM+G,WAAW6S,IAEnBD,EAAO,CACVnE,EAASxV,EAAM+C,MAAMwB,GACrB,MAGF,GAAa,KAATlF,GAAekF,IAAkBqV,GAAeH,EAClDzV,EAAOlE,MAAM,GACb2Z,OAAmBrZ,OAYnB,GAVIqZ,IACFzV,EAAOlE,MAAM,GACb2Z,OAAmBrZ,GAGjBmE,EAAgBqV,IAClB5V,EAAOlE,KAAKE,EAAM+C,MAAMwB,EAAeqV,IACvC5S,GAAU4S,EAAcrV,GAGb,IAATlF,EACF2E,EAAOlE,KAAK,OACZkH,SACK,GAAa,IAAT3H,EAIT,IAHA0F,EAA+B,EAAxBiV,KAAKC,KAAKjT,EAAS,GAC1BhD,EAAOlE,MAAM,GAENkH,IAAWjC,GAAMf,EAAOlE,MAAM,QACnB,KAATT,GACT2E,EAAOlE,MAAM,GACbkH,EAAS,IAGTyS,GAAmB,EACnBzS,EAAS,GAIbzC,EAAgBqV,EAAc,EAG5BhY,IACE6X,GAAkBzV,EAAOlE,MAAM,GAC/B0V,GAAQxR,EAAOlE,KAAK0V,GACxBxR,EAAOlE,KAAK,OAGd,OAAOkE,K,iCChFX,IAAI8I,EAAc1O,EAAQ,IAU1BH,EAAOC,QARP,SAAqBG,GACnB,MAAQyO,EAAYzO,KAIpB,OAAOA,I,+BCHTJ,EAAOC,QAJP,SAAmCmB,GACjC,OAAOA,EAAO,GAAc,KAATA,I,+BCDrB,IAAIT,EAAeR,EAAQ,IAU3BH,EAAOC,QARP,SAAoBgc,GAClB,OAEA,SAAe7a,GACb,OAAO6a,EAAMpG,KAAKlV,EAAaS,O,+BCNnC,IAAItB,EAASK,EAAQ,IAMrBH,EAAOC,QAJP,SAAiBic,GACf,OAAOpc,EAAO,GAAIoc","file":"static/js/micromark-vendor.867cb854.chunk.js","sourcesContent":["'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n    return ok(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n"],"sourceRoot":""}